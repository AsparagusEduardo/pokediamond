	.include "asm/macros.inc"
	.include "global.inc"
	.section .text
	.balign 4, 0

	thumb_func_start ov11_02256C08
ov11_02256C08: ; 0x02256C08
	push {r4, r5, r6, r7, lr}
	sub sp, #0x1c
	add r5, r0, #0
	lsl r0, r3, #0x18
	lsr r0, r0, #0x18
	add r4, r1, #0
	add r7, r2, #0
	str r3, [sp, #0x18]
	bl ov11_02257FC0
	add r6, r0, #0
	ldr r3, [r6, #0x14]
	mov r0, #1
	str r0, [sp]
	str r0, [sp, #4]
	add r0, r5, #0
	add r1, r4, #0
	mov r2, #0x1b
	str r3, [sp, #8]
	bl sub_0200C00C
	mov r0, #0x1b
	str r0, [sp]
	mov r0, #0x23
	str r0, [sp, #4]
	mov r0, #0
	str r0, [sp, #8]
	mov r0, #1
	str r0, [sp, #0xc]
	str r0, [sp, #0x10]
	ldr r0, _02256CC8 ; =0x00004E26
	mov r1, #2
	str r0, [sp, #0x14]
	add r0, r7, #0
	add r2, r5, #0
	add r3, r4, #0
	bl sub_0200C0DC
	ldr r3, [r6, #0x1c]
	mov r0, #1
	str r0, [sp]
	str r3, [sp, #4]
	add r0, r5, #0
	add r1, r4, #0
	mov r2, #0x1b
	bl sub_0200C124
	ldr r3, [r6, #0x20]
	mov r0, #1
	str r0, [sp]
	add r0, r5, #0
	add r1, r4, #0
	mov r2, #0x1b
	str r3, [sp, #4]
	bl sub_0200C13C
	mov r0, #0x1b
	str r0, [sp]
	mov r0, #0x23
	str r0, [sp, #4]
	mov r0, #0
	str r0, [sp, #8]
	mov r0, #1
	str r0, [sp, #0xc]
	str r0, [sp, #0x10]
	ldr r0, _02256CCC ; =0x00004E27
	mov r1, #2
	str r0, [sp, #0x14]
	add r0, r7, #0
	add r2, r5, #0
	add r3, r4, #0
	bl sub_0200C0DC
	ldr r0, [sp, #0x18]
	sub r0, r0, #6
	cmp r0, #1
	bhi _02256CC4
	mov r0, #0x1b
	str r0, [sp]
	mov r0, #0x2d
	str r0, [sp, #4]
	mov r0, #0
	str r0, [sp, #8]
	mov r0, #1
	str r0, [sp, #0xc]
	str r0, [sp, #0x10]
	ldr r0, _02256CD0 ; =0x00004E28
	mov r1, #2
	str r0, [sp, #0x14]
	add r0, r7, #0
	add r2, r5, #0
	add r3, r4, #0
	bl sub_0200C0DC
_02256CC4:
	add sp, #0x1c
	pop {r4, r5, r6, r7, pc}
	.align 2, 0
_02256CC8: .word 0x00004E26
_02256CCC: .word 0x00004E27
_02256CD0: .word 0x00004E28

	thumb_func_start ov11_02256CD4
ov11_02256CD4: ; 0x02256CD4
	push {r3, r4, r5, r6, r7, lr}
	sub sp, #0x18
	add r5, r0, #0
	lsl r0, r3, #0x18
	lsr r0, r0, #0x18
	add r6, r1, #0
	add r7, r2, #0
	bl ov11_02258024
	add r4, r0, #0
	beq _02256D44
	ldr r3, [r4, #0x14]
	mov r0, #1
	str r0, [sp]
	str r0, [sp, #4]
	add r0, r5, #0
	add r1, r6, #0
	mov r2, #0x1b
	str r3, [sp, #8]
	bl sub_0200C00C
	mov r0, #0x1b
	str r0, [sp]
	mov r0, #0x23
	str r0, [sp, #4]
	mov r0, #0
	str r0, [sp, #8]
	mov r0, #1
	str r0, [sp, #0xc]
	str r0, [sp, #0x10]
	ldr r0, _02256D48 ; =0x00004E26
	mov r1, #2
	str r0, [sp, #0x14]
	add r0, r7, #0
	add r2, r5, #0
	add r3, r6, #0
	bl sub_0200C0DC
	ldr r3, [r4, #0x1c]
	mov r0, #1
	str r0, [sp]
	str r3, [sp, #4]
	add r0, r5, #0
	add r1, r6, #0
	mov r2, #0x1b
	bl sub_0200C124
	ldr r3, [r4, #0x20]
	mov r0, #1
	str r0, [sp]
	add r0, r5, #0
	add r1, r6, #0
	mov r2, #0x1b
	str r3, [sp, #4]
	bl sub_0200C13C
_02256D44:
	add sp, #0x18
	pop {r3, r4, r5, r6, r7, pc}
	.align 2, 0
_02256D48: .word 0x00004E26

	thumb_func_start ov11_02256D4C
ov11_02256D4C: ; 0x02256D4C
	push {r3, r4, r5, lr}
	add r5, r0, #0
	lsl r0, r2, #0x18
	add r4, r1, #0
	lsr r0, r0, #0x18
	bl ov11_02257FC0
	add r2, r0, #0
	add r0, r5, #0
	add r1, r4, #0
	bl sub_0200C154
	add r4, r0, #0
	ldr r0, [r4]
	bl sub_0200C59C
	add r0, r4, #0
	pop {r3, r4, r5, pc}

	thumb_func_start ov11_02256D70
ov11_02256D70: ; 0x02256D70
	push {r4, r5, r6, lr}
	add r5, r0, #0
	ldr r0, [r5, #4]
	add r6, r1, #0
	add r4, r2, #0
	cmp r0, #0
	bne _02256D82
	bl GF_AssertFail
_02256D82:
	add r0, r5, #0
	add r0, #0x25
	ldrb r0, [r0]
	cmp r0, #6
	bne _02256D94
	mov r1, #3
	lsl r1, r1, #0xa
	and r4, r1
	b _02256DA4
_02256D94:
	cmp r0, #7
	bne _02256DA0
	mov r1, #3
	lsl r1, r1, #0xc
	and r4, r1
	b _02256DA4
_02256DA0:
	ldr r1, _02256F00 ; =0xFFFFC3FF
	and r4, r1
_02256DA4:
	cmp r0, #7
	bhi _02256DEA
	add r0, r0, r0
	add r0, pc
	ldrh r0, [r0, #6]
	lsl r0, r0, #0x10
	asr r0, r0, #0x10
	add pc, r0
_02256DB4: ; jump table
	.short _02256DE6 - _02256DB4 - 2 ; case 0
	.short _02256DC4 - _02256DB4 - 2 ; case 1
	.short _02256DCA - _02256DB4 - 2 ; case 2
	.short _02256DC4 - _02256DB4 - 2 ; case 3
	.short _02256DCA - _02256DB4 - 2 ; case 4
	.short _02256DC4 - _02256DB4 - 2 ; case 5
	.short _02256DEA - _02256DB4 - 2 ; case 6
	.short _02256DEA - _02256DB4 - 2 ; case 7
_02256DC4:
	mov r0, #0x26
	bic r4, r0
	b _02256DEA
_02256DCA:
	ldr r0, _02256F04 ; =0xFFFFFDDF
	and r4, r0
	add r0, r5, #0
	add r0, #0x4f
	ldrb r0, [r0]
	lsl r0, r0, #0x1c
	lsr r0, r0, #0x1f
	bne _02256DE0
	mov r0, #6
	bic r4, r0
	b _02256DEA
_02256DE0:
	mov r0, #1
	bic r4, r0
	b _02256DEA
_02256DE6:
	ldr r0, _02256F08 ; =0xFFFFFDFF
	and r4, r0
_02256DEA:
	ldr r0, [r5, #0xc]
	bl ov11_0222FF74
	mov r1, #1
	tst r0, r1
	beq _02256DFA
	ldr r0, _02256F08 ; =0xFFFFFDFF
	and r4, r0
_02256DFA:
	mov r0, #1
	tst r0, r4
	beq _02256E10
	add r0, r5, #0
	mov r1, #0
	bl ov11_02257150
	add r0, r5, #0
	mov r1, #0
	bl ov11_02257BEC
_02256E10:
	mov r0, #2
	tst r0, r4
	beq _02256E1E
	add r0, r5, #0
	add r1, r6, #0
	bl ov11_0225787C
_02256E1E:
	mov r0, #4
	tst r0, r4
	beq _02256E2A
	add r0, r5, #0
	bl ov11_02257908
_02256E2A:
	mov r0, #0x80
	tst r0, r4
	bne _02256E36
	mov r0, #0x40
	tst r0, r4
	beq _02256E3C
_02256E36:
	add r0, r5, #0
	bl ov11_02257654
_02256E3C:
	mov r0, #8
	tst r0, r4
	beq _02256E48
	add r0, r5, #0
	bl ov11_0225775C
_02256E48:
	mov r0, #0x10
	tst r0, r4
	beq _02256E54
	add r0, r5, #0
	bl ov11_022574F0
_02256E54:
	mov r0, #0x20
	tst r0, r4
	beq _02256E6A
	add r0, r5, #0
	mov r1, #0
	bl ov11_022571B8
	add r0, r5, #0
	mov r1, #1
	bl ov11_02257BEC
_02256E6A:
	mov r0, #2
	lsl r0, r0, #8
	tst r0, r4
	beq _02256E78
	add r0, r5, #0
	bl ov11_02257968
_02256E78:
	mov r0, #1
	lsl r0, r0, #8
	tst r0, r4
	beq _02256EDC
	add r0, r5, #0
	add r0, #0x4a
	ldrb r0, [r0]
	cmp r0, #5
	bhi _02256EA2
	add r0, r0, r0
	add r0, pc
	ldrh r0, [r0, #6]
	lsl r0, r0, #0x10
	asr r0, r0, #0x10
	add pc, r0
_02256E96: ; jump table
	.short _02256EA2 - _02256E96 - 2 ; case 0
	.short _02256EAC - _02256E96 - 2 ; case 1
	.short _02256EB6 - _02256E96 - 2 ; case 2
	.short _02256EC0 - _02256E96 - 2 ; case 3
	.short _02256ECA - _02256E96 - 2 ; case 4
	.short _02256ED4 - _02256E96 - 2 ; case 5
_02256EA2:
	add r0, r5, #0
	mov r1, #0x38
	bl ov11_022579B8
	b _02256EDC
_02256EAC:
	add r0, r5, #0
	mov r1, #0x2f
	bl ov11_022579B8
	b _02256EDC
_02256EB6:
	add r0, r5, #0
	mov r1, #0x32
	bl ov11_022579B8
	b _02256EDC
_02256EC0:
	add r0, r5, #0
	mov r1, #0x35
	bl ov11_022579B8
	b _02256EDC
_02256ECA:
	add r0, r5, #0
	mov r1, #0x2c
	bl ov11_022579B8
	b _02256EDC
_02256ED4:
	add r0, r5, #0
	mov r1, #0x29
	bl ov11_022579B8
_02256EDC:
	mov r0, #5
	lsl r0, r0, #0xa
	tst r0, r4
	beq _02256EEC
	add r0, r5, #0
	add r1, r4, #0
	bl ov11_022579F8
_02256EEC:
	mov r0, #0xa
	lsl r0, r0, #0xa
	tst r0, r4
	beq _02256EFC
	add r0, r5, #0
	add r1, r4, #0
	bl ov11_02257AD4
_02256EFC:
	pop {r4, r5, r6, pc}
	nop
_02256F00: .word 0xFFFFC3FF
_02256F04: .word 0xFFFFFDDF
_02256F08: .word 0xFFFFFDFF

	thumb_func_start ov11_02256F0C
ov11_02256F0C: ; 0x02256F0C
	push {r4, lr}
	add r4, r0, #0
	ldr r0, [r4, #0x50]
	cmp r0, #0
	beq _02256F1E
	bl SysTask_Destroy
	mov r0, #0
	str r0, [r4, #0x50]
_02256F1E:
	ldr r0, [r4, #4]
	cmp r0, #0
	beq _02256F2C
	bl sub_0200C3DC
	mov r0, #0
	str r0, [r4, #4]
_02256F2C:
	pop {r4, pc}
	.align 2, 0

	thumb_func_start ov11_02256F30
ov11_02256F30: ; 0x02256F30
	push {r4, lr}
	add r4, r0, #0
	ldr r0, [r4, #8]
	cmp r0, #0
	beq _02256F42
	bl sub_0200C3DC
	mov r0, #0
	str r0, [r4, #8]
_02256F42:
	pop {r4, pc}

	thumb_func_start ov11_02256F44
ov11_02256F44: ; 0x02256F44
	push {r3, r4, r5, lr}
	add r5, r0, #0
	add r0, #0x25
	ldrb r0, [r0]
	bl ov11_02257FC0
	add r4, r0, #0
	ldr r0, [r5, #0xc]
	bl ov11_02230078
	ldr r0, [r5, #0xc]
	bl ov11_02230080
	ldr r1, [r4, #0x14]
	add r5, r0, #0
	bl sub_0200C358
	ldr r1, [r4, #0x1c]
	add r0, r5, #0
	bl sub_0200C378
	ldr r1, [r4, #0x20]
	add r0, r5, #0
	bl sub_0200C388
	pop {r3, r4, r5, pc}

	thumb_func_start ov11_02256F78
ov11_02256F78: ; 0x02256F78
	push {r3, r4, r5, lr}
	add r5, r0, #0
	add r0, #0x25
	ldrb r0, [r0]
	bl ov11_02258024
	add r4, r0, #0
	beq _02256FAC
	ldr r0, [r5, #0xc]
	bl ov11_02230078
	ldr r0, [r5, #0xc]
	bl ov11_02230080
	ldr r1, [r4, #0x14]
	add r5, r0, #0
	bl sub_0200C358
	ldr r1, [r4, #0x1c]
	add r0, r5, #0
	bl sub_0200C378
	ldr r1, [r4, #0x20]
	add r0, r5, #0
	bl sub_0200C388
_02256FAC:
	pop {r3, r4, r5, pc}
	.align 2, 0

	thumb_func_start ov11_02256FB0
ov11_02256FB0: ; 0x02256FB0
	push {r3, r4, r5, r6, r7, lr}
	add r5, r0, #0
	ldr r0, [r5, #0xc]
	bl ov11_02230078
	add r6, r0, #0
	ldr r0, [r5, #0xc]
	bl ov11_02230080
	add r7, r0, #0
	ldr r0, [r5, #0xc]
	bl ov11_022300CC
	str r0, [sp]
	add r0, r5, #0
	add r0, #0x25
	ldrb r0, [r0]
	bl ov11_02257FC0
	add r3, r5, #0
	add r3, #0x25
	add r4, r0, #0
	ldrb r3, [r3]
	ldr r2, [sp]
	add r0, r6, #0
	add r1, r7, #0
	bl ov11_02256C08
	add r2, r5, #0
	add r2, #0x25
	ldrb r2, [r2]
	add r0, r6, #0
	add r1, r7, #0
	bl ov11_02256D4C
	add r3, r5, #0
	str r0, [r5, #4]
	add r3, #0x25
	ldrb r3, [r3]
	ldr r2, [sp]
	add r0, r6, #0
	add r1, r7, #0
	bl ov11_02256CD4
	ldr r0, [r5, #8]
	cmp r0, #0
	beq _0225702A
	add r5, #0x25
	mov r1, #0
	ldrsh r3, [r4, r1]
	ldrb r2, [r5]
	ldr r1, _0225702C ; =ov11_0225E970
	ldr r0, [r0]
	ldrsb r1, [r1, r2]
	mov r2, #2
	ldrsh r2, [r4, r2]
	sub r1, r3, r1
	lsl r1, r1, #0x10
	asr r1, r1, #0x10
	bl sub_0200C6E4
_0225702A:
	pop {r3, r4, r5, r6, r7, pc}
	.align 2, 0
_0225702C: .word ov11_0225E970

	thumb_func_start ov11_02257030
ov11_02257030: ; 0x02257030
	push {r4, lr}
	add r4, r0, #0
	bl ov11_02256F0C
	add r0, r4, #0
	bl ov11_02256F44
	add r0, r4, #0
	bl ov11_02256F30
	add r0, r4, #0
	bl ov11_02256F78
	pop {r4, pc}

	thumb_func_start ov11_0225704C
ov11_0225704C: ; 0x0225704C
	push {r4, r5, r6, lr}
	add r5, r0, #0
	add r0, #0x25
	ldrb r0, [r0]
	cmp r0, #2
	beq _0225705C
	cmp r0, #4
	bne _02257136
_0225705C:
	add r0, r5, #0
	add r0, #0x4f
	ldrb r2, [r0]
	mov r1, #8
	add r0, r2, #0
	bic r0, r1
	lsl r1, r2, #0x1c
	lsr r2, r1, #0x1f
	mov r1, #1
	eor r1, r2
	lsl r1, r1, #0x18
	lsr r1, r1, #0x18
	lsl r1, r1, #0x1f
	lsr r1, r1, #0x1c
	orr r1, r0
	add r0, r5, #0
	add r0, #0x4f
	strb r1, [r0]
	ldr r0, [r5, #4]
	ldr r0, [r0]
	bl sub_02020350
	add r4, r0, #0
	add r0, r5, #0
	add r0, #0x4f
	ldrb r0, [r0]
	lsl r0, r0, #0x1c
	lsr r0, r0, #0x1f
	cmp r0, #1
	bne _022570E8
	mov r0, #0x38
	bl ov11_02257F60
	add r1, r5, #0
	add r1, #0x25
	ldrb r1, [r1]
	mov r6, #0x19
	ldr r3, _02257138 ; =ov11_0225E9B0
	lsl r2, r1, #2
	ldrh r3, [r3, r2]
	lsl r6, r6, #0x16
	ldr r1, [r4, #4]
	add r3, r6, r3
	add r1, r1, r3
	ldr r3, _0225713C ; =ov11_0225E9B2
	ldrh r2, [r3, r2]
	bl MIi_CpuCopy16
	mov r0, #0x45
	bl ov11_02257F60
	add r1, r5, #0
	add r1, #0x25
	ldrb r1, [r1]
	ldr r3, _02257140 ; =ov11_0225EA10
	lsl r2, r1, #2
	ldrh r3, [r3, r2]
	ldr r1, [r4, #4]
	add r3, r6, r3
	add r1, r1, r3
	ldr r3, _02257144 ; =ov11_0225EA12
	ldrh r2, [r3, r2]
	bl MIi_CpuCopy16
	ldr r1, [r5, #0x28]
	add r0, r5, #0
	mov r2, #6
	bl ov11_02256D70
	pop {r4, r5, r6, pc}
_022570E8:
	mov r0, #0x42
	bl ov11_02257F60
	add r1, r5, #0
	add r1, #0x25
	ldrb r1, [r1]
	mov r6, #0x19
	ldr r3, _02257138 ; =ov11_0225E9B0
	lsl r2, r1, #2
	ldrh r3, [r3, r2]
	lsl r6, r6, #0x16
	ldr r1, [r4, #4]
	add r3, r6, r3
	add r1, r1, r3
	ldr r3, _0225713C ; =ov11_0225E9B2
	ldrh r2, [r3, r2]
	bl MIi_CpuCopy16
	mov r0, #0x44
	bl ov11_02257F60
	add r1, r5, #0
	add r1, #0x25
	ldrb r1, [r1]
	ldr r3, _02257148 ; =ov11_0225E9E0
	lsl r2, r1, #2
	ldrh r3, [r3, r2]
	ldr r1, [r4, #4]
	add r3, r6, r3
	add r1, r1, r3
	ldr r3, _0225714C ; =ov11_0225E9E2
	ldrh r2, [r3, r2]
	bl MIi_CpuCopy16
	ldr r1, [r5, #0x28]
	add r0, r5, #0
	mov r2, #1
	bl ov11_02256D70
_02257136:
	pop {r4, r5, r6, pc}
	.align 2, 0
_02257138: .word ov11_0225E9B0
_0225713C: .word ov11_0225E9B2
_02257140: .word ov11_0225EA10
_02257144: .word ov11_0225EA12
_02257148: .word ov11_0225E9E0
_0225714C: .word ov11_0225E9E2

	thumb_func_start ov11_02257150
ov11_02257150: ; 0x02257150
	mov r2, #2
	lsl r2, r2, #0x1e
	str r2, [r0, #0x34]
	ldr r3, [r0, #0x28]
	add r2, r3, r1
	bpl _0225715E
	sub r1, r1, r2
_0225715E:
	ldr r2, [r0, #0x2c]
	add r3, r3, r1
	cmp r3, r2
	ble _0225716A
	sub r2, r3, r2
	sub r1, r1, r2
_0225716A:
	neg r1, r1
	str r1, [r0, #0x30]
	ldr r1, [r0, #0x28]
	cmp r1, #0
	bge _02257178
	mov r1, #0
	str r1, [r0, #0x28]
_02257178:
	ldr r2, [r0, #0x2c]
	ldr r1, [r0, #0x28]
	cmp r1, r2
	ble _02257182
	str r2, [r0, #0x28]
_02257182:
	bx lr

	thumb_func_start ov11_02257184
ov11_02257184: ; 0x02257184
	push {r3, r4, r5, lr}
	mov r1, #0
	add r5, r0, #0
	bl ov11_02257BEC
	add r4, r0, #0
	mov r0, #0
	mvn r0, r0
	cmp r4, r0
	bne _022571AA
	ldr r1, [r5, #0x28]
	ldr r0, [r5, #0x30]
	mov r2, #2
	sub r1, r1, r0
	add r0, r5, #0
	str r1, [r5, #0x28]
	bl ov11_02256D70
	b _022571B4
_022571AA:
	add r0, r5, #0
	add r1, r4, #0
	mov r2, #2
	bl ov11_02256D70
_022571B4:
	add r0, r4, #0
	pop {r3, r4, r5, pc}

	thumb_func_start ov11_022571B8
ov11_022571B8: ; 0x022571B8
	mov r2, #2
	lsl r2, r2, #0x1e
	str r2, [r0, #0x44]
	ldr r3, [r0, #0x38]
	add r2, r3, r1
	bpl _022571C6
	sub r1, r1, r2
_022571C6:
	ldr r2, [r0, #0x3c]
	add r3, r3, r1
	cmp r3, r2
	ble _022571D2
	sub r2, r3, r2
	sub r1, r1, r2
_022571D2:
	neg r1, r1
	str r1, [r0, #0x40]
	ldr r1, [r0, #0x38]
	cmp r1, #0
	bge _022571E0
	mov r1, #0
	str r1, [r0, #0x38]
_022571E0:
	ldr r2, [r0, #0x3c]
	ldr r1, [r0, #0x38]
	cmp r1, r2
	ble _022571EA
	str r2, [r0, #0x38]
_022571EA:
	bx lr

	thumb_func_start ov11_022571EC
ov11_022571EC: ; 0x022571EC
	push {r4, lr}
	mov r1, #1
	add r4, r0, #0
	bl ov11_02257BEC
	mov r1, #0
	mvn r1, r1
	cmp r0, r1
	bne _02257206
	ldr r2, [r4, #0x38]
	ldr r1, [r4, #0x40]
	sub r1, r2, r1
	str r1, [r4, #0x38]
_02257206:
	pop {r4, pc}

	thumb_func_start ov11_02257208
ov11_02257208: ; 0x02257208
	push {r4, lr}
	add r4, r0, #0
	ldr r0, [r4, #8]
	cmp r0, #0
	beq _02257222
	ldr r0, [r0]
	mov r1, #1
	bl sub_020200BC
	add r0, r4, #0
	mov r1, #1
	bl ov11_02257284
_02257222:
	ldr r0, [r4, #0xc]
	bl ov11_0222FF74
	mov r1, #0x22
	lsl r1, r1, #4
	tst r0, r1
	bne _02257236
	add r0, r4, #0
	bl ov11_02258188
_02257236:
	pop {r4, pc}

	thumb_func_start ov11_02257238
ov11_02257238: ; 0x02257238
	push {r4, lr}
	add r4, r0, #0
	ldr r0, [r4, #8]
	cmp r0, #0
	beq _0225725C
	ldr r0, [r0]
	mov r1, #0
	bl sub_020200BC
	ldr r0, [r4, #8]
	mov r1, #0
	ldr r0, [r0]
	bl sub_02020208
	add r0, r4, #0
	mov r1, #0
	bl ov11_02257284
_0225725C:
	add r0, r4, #0
	bl ov11_022581B0
	pop {r4, pc}

	thumb_func_start ov11_02257264
ov11_02257264: ; 0x02257264
	push {r3, r4, r5, lr}
	add r5, r0, #0
	ldr r0, [r5, #4]
	add r4, r1, #0
	cmp r0, #0
	beq _02257280
	bl sub_0200C6B0
	ldr r0, [r5, #8]
	cmp r0, #0
	beq _02257280
	add r1, r4, #0
	bl sub_0200C6B0
_02257280:
	pop {r3, r4, r5, pc}
	.align 2, 0

	thumb_func_start ov11_02257284
ov11_02257284: ; 0x02257284
	push {r3, r4, r5, lr}
	add r5, r0, #0
	ldr r0, [r5, #8]
	add r4, r1, #0
	cmp r0, #0
	beq _022572AA
	ldr r0, [r5, #0xc]
	bl ov11_0222FF74
	mov r1, #0x22
	lsl r1, r1, #4
	tst r0, r1
	beq _022572A2
	cmp r4, #1
	beq _022572AA
_022572A2:
	ldr r0, [r5, #8]
	add r1, r4, #0
	bl sub_0200C644
_022572AA:
	pop {r3, r4, r5, pc}

	thumb_func_start ov11_022572AC
ov11_022572AC: ; 0x022572AC
	push {r3, r4, r5, lr}
	add r5, r0, #0
	ldr r0, [r5, #4]
	add r4, r1, #0
	cmp r0, #0
	beq _022572C4
	bl sub_0200C644
	add r0, r5, #0
	add r1, r4, #0
	bl ov11_02257284
_022572C4:
	pop {r3, r4, r5, pc}
	.align 2, 0

	thumb_func_start ov11_022572C8
ov11_022572C8: ; 0x022572C8
	push {r3, r4, r5, r6, r7, lr}
	add r5, r0, #0
	ldr r0, [r5, #4]
	add r6, r1, #0
	add r7, r2, #0
	cmp r0, #0
	bne _022572DA
	bl GF_AssertFail
_022572DA:
	add r0, r5, #0
	add r0, #0x25
	ldrb r0, [r0]
	bl ov11_02257FC0
	add r4, r0, #0
	mov r1, #0
	mov r2, #2
	ldrsh r1, [r4, r1]
	ldrsh r2, [r4, r2]
	ldr r0, [r5, #4]
	add r1, r1, r6
	add r2, r2, r7
	lsl r1, r1, #0x10
	lsl r2, r2, #0x10
	ldr r0, [r0]
	asr r1, r1, #0x10
	asr r2, r2, #0x10
	bl sub_0200C6E4
	ldr r0, [r5, #8]
	cmp r0, #0
	beq _0225732C
	add r5, #0x25
	ldrb r3, [r5]
	mov r1, #0
	ldr r2, _02257330 ; =ov11_0225E970
	ldrsh r1, [r4, r1]
	ldrsb r2, [r2, r3]
	ldr r0, [r0]
	add r1, r1, r6
	sub r1, r1, r2
	mov r2, #2
	ldrsh r2, [r4, r2]
	lsl r1, r1, #0x10
	asr r1, r1, #0x10
	add r2, r2, r7
	lsl r2, r2, #0x10
	asr r2, r2, #0x10
	bl sub_0200C6E4
_0225732C:
	pop {r3, r4, r5, r6, r7, pc}
	nop
_02257330: .word ov11_0225E970

	thumb_func_start ov11_02257334
ov11_02257334: ; 0x02257334
	push {r3, r4, r5, lr}
	add r4, r0, #0
	add r5, r1, #0
	cmp r4, #0
	bne _02257342
	bl GF_AssertFail
_02257342:
	ldr r0, [r4, #4]
	cmp r0, #0
	bne _0225734C
	bl GF_AssertFail
_0225734C:
	add r0, r4, #0
	add r0, #0x4f
	ldrb r1, [r0]
	mov r0, #2
	bic r1, r0
	add r0, r4, #0
	add r0, #0x4f
	strb r1, [r0]
	add r0, r4, #0
	add r0, #0x4f
	ldrb r0, [r0]
	mov r1, #1
	bic r0, r1
	lsl r1, r5, #0x18
	lsr r2, r1, #0x18
	mov r1, #1
	and r1, r2
	orr r1, r0
	add r0, r4, #0
	add r0, #0x4f
	strb r1, [r0]
	cmp r5, #0
	bne _022573BA
	add r0, r4, #0
	add r0, #0x25
	ldrb r0, [r0]
	cmp r0, #7
	bhi _022573AC
	add r0, r0, r0
	add r0, pc
	ldrh r0, [r0, #6]
	lsl r0, r0, #0x10
	asr r0, r0, #0x10
	add pc, r0
_02257390: ; jump table
	.short _022573A0 - _02257390 - 2 ; case 0
	.short _022573AC - _02257390 - 2 ; case 1
	.short _022573A0 - _02257390 - 2 ; case 2
	.short _022573AC - _02257390 - 2 ; case 3
	.short _022573A0 - _02257390 - 2 ; case 4
	.short _022573AC - _02257390 - 2 ; case 5
	.short _022573A0 - _02257390 - 2 ; case 6
	.short _022573A0 - _02257390 - 2 ; case 7
_022573A0:
	add r0, r4, #0
	mov r1, #0xa0
	mov r2, #0
	bl ov11_022572C8
	b _022573C4
_022573AC:
	mov r1, #0x9f
	add r0, r4, #0
	mvn r1, r1
	mov r2, #0
	bl ov11_022572C8
	b _022573C4
_022573BA:
	mov r1, #0
	add r0, r4, #0
	add r2, r1, #0
	bl ov11_022572C8
_022573C4:
	ldr r0, _022573D0 ; =ov11_022573D8
	ldr r2, _022573D4 ; =0x000003DE
	add r1, r4, #0
	bl SysTask_CreateOnMainQueue
	pop {r3, r4, r5, pc}
	.align 2, 0
_022573D0: .word ov11_022573D8
_022573D4: .word 0x000003DE

	thumb_func_start ov11_022573D8
ov11_022573D8: ; 0x022573D8
	push {r3, r4, r5, r6, r7, lr}
	add r5, r1, #0
	add r7, r0, #0
	add r0, r5, #0
	add r0, #0x25
	ldrb r0, [r0]
	mov r4, #0
	bl ov11_02257FC0
	add r6, r0, #0
	add r1, sp, #0
	ldr r0, [r5, #4]
	add r1, #2
	add r2, sp, #0
	bl sub_0200C7A0
	add r0, r5, #0
	add r0, #0x25
	ldrb r0, [r0]
	cmp r0, #7
	bhi _0225745E
	add r0, r0, r0
	add r0, pc
	ldrh r0, [r0, #6]
	lsl r0, r0, #0x10
	asr r0, r0, #0x10
	add pc, r0
_0225740E: ; jump table
	.short _0225741E - _0225740E - 2 ; case 0
	.short _0225745E - _0225740E - 2 ; case 1
	.short _0225741E - _0225740E - 2 ; case 2
	.short _0225745E - _0225740E - 2 ; case 3
	.short _0225741E - _0225740E - 2 ; case 4
	.short _0225745E - _0225740E - 2 ; case 5
	.short _0225741E - _0225740E - 2 ; case 6
	.short _0225741E - _0225740E - 2 ; case 7
_0225741E:
	add r0, r5, #0
	add r0, #0x4f
	ldrb r0, [r0]
	lsl r0, r0, #0x1f
	lsr r0, r0, #0x1f
	add r0, sp, #0
	bne _02257444
	mov r1, #2
	ldrsh r2, [r0, r1]
	sub r2, #0x18
	strh r2, [r0, #2]
	add r2, r4, #0
	ldrsh r1, [r0, r1]
	ldrsh r2, [r6, r2]
	cmp r1, r2
	bge _0225749C
	strh r2, [r0, #2]
	add r4, r4, #1
	b _0225749C
_02257444:
	mov r1, #2
	ldrsh r2, [r0, r1]
	add r2, #0x18
	strh r2, [r0, #2]
	add r2, r4, #0
	ldrsh r2, [r6, r2]
	ldrsh r1, [r0, r1]
	add r2, #0xa0
	cmp r1, r2
	ble _0225749C
	strh r2, [r0, #2]
	add r4, r4, #1
	b _0225749C
_0225745E:
	add r0, r5, #0
	add r0, #0x4f
	ldrb r0, [r0]
	lsl r0, r0, #0x1f
	lsr r0, r0, #0x1f
	add r0, sp, #0
	bne _02257484
	mov r1, #2
	ldrsh r2, [r0, r1]
	add r2, #0x18
	strh r2, [r0, #2]
	mov r2, #0
	ldrsh r1, [r0, r1]
	ldrsh r2, [r6, r2]
	cmp r1, r2
	ble _0225749C
	strh r2, [r0, #2]
	add r4, r4, #1
	b _0225749C
_02257484:
	mov r1, #2
	ldrsh r2, [r0, r1]
	sub r2, #0x18
	strh r2, [r0, #2]
	mov r2, #0
	ldrsh r2, [r6, r2]
	ldrsh r1, [r0, r1]
	sub r2, #0x18
	cmp r1, r2
	bge _0225749C
	strh r2, [r0, #2]
	add r4, r4, #1
_0225749C:
	add r2, sp, #0
	mov r1, #2
	mov r3, #0
	ldrsh r1, [r2, r1]
	ldrsh r2, [r2, r3]
	ldr r0, [r5, #4]
	bl sub_0200C714
	ldr r0, [r5, #8]
	cmp r0, #0
	beq _022574D0
	add r6, sp, #0
	mov r1, #2
	ldrsh r3, [r6, r1]
	add r1, r5, #0
	add r1, #0x25
	ldrb r2, [r1]
	ldr r1, _022574EC ; =ov11_0225E970
	ldrsb r1, [r1, r2]
	mov r2, #0
	ldrsh r2, [r6, r2]
	sub r1, r3, r1
	lsl r1, r1, #0x10
	asr r1, r1, #0x10
	bl sub_0200C714
_022574D0:
	cmp r4, #0
	ble _022574E8
	add r0, r5, #0
	add r0, #0x4f
	ldrb r1, [r0]
	mov r0, #2
	add r5, #0x4f
	orr r0, r1
	strb r0, [r5]
	add r0, r7, #0
	bl SysTask_Destroy
_022574E8:
	pop {r3, r4, r5, r6, r7, pc}
	nop
_022574EC: .word ov11_0225E970

	thumb_func_start ov11_022574F0
ov11_022574F0: ; 0x022574F0
	push {r4, r5, r6, r7, lr}
	sub sp, #0x34
	add r5, r0, #0
	ldr r0, [r5, #0xc]
	bl ov11_0222FF68
	add r6, r0, #0
	ldr r0, [r5, #0xc]
	bl ov11_022300C4
	add r7, r0, #0
	ldr r0, [r5, #0xc]
	bl ov11_02230138
	add r4, r0, #0
	mov r0, #0x16
	mov r1, #5
	bl String_New
	mov r1, #0xf1
	str r0, [sp, #0x18]
	add r0, r7, #0
	lsl r1, r1, #2
	bl NewString_ReadMsgData
	add r1, r5, #0
	add r2, r5, #0
	add r1, #0x24
	add r2, #0x26
	str r0, [sp, #0x1c]
	ldrb r1, [r1]
	ldrb r2, [r2]
	ldr r0, [r5, #0xc]
	bl ov11_02230014
	bl sub_020690E4
	add r2, r0, #0
	add r0, r4, #0
	mov r1, #0
	bl BufferBoxMonNickname
	ldr r1, [sp, #0x18]
	ldr r2, [sp, #0x1c]
	add r0, r4, #0
	bl StringExpandPlaceholders
	mov r0, #0
	str r0, [sp]
	mov r0, #0xf
	str r0, [sp, #4]
	add r0, r6, #0
	add r1, sp, #0x24
	mov r2, #8
	mov r3, #2
	bl AddTextWindowTopLeftCorner
	mov r1, #0
	str r1, [sp]
	mov r0, #0xff
	str r0, [sp, #4]
	ldr r0, _02257630 ; =0x000E020F
	ldr r2, [sp, #0x18]
	str r0, [sp, #8]
	str r1, [sp, #0xc]
	str r1, [sp, #0x10]
	str r1, [sp, #0x14]
	add r0, sp, #0x24
	add r3, r1, #0
	bl AddTextPrinterParameterized3
	ldr r0, [r5, #4]
	ldr r6, [sp, #0x30]
	ldr r0, [r0]
	bl sub_02020350
	add r4, r0, #0
	mov r0, #1
	lsl r0, r0, #8
	add r0, r6, r0
	str r0, [sp, #0x20]
	add r0, r5, #0
	add r0, #0x25
	ldrb r0, [r0]
	ldr r1, _02257634 ; =ov11_0225EC88
	ldr r3, [r4, #4]
	lsl r7, r0, #4
	ldrh r2, [r1, r7]
	mov r1, #0x19
	lsl r1, r1, #0x16
	add r1, r1, r2
	ldr r2, _02257638 ; =ov11_0225EC8A
	add r0, r6, #0
	ldrh r2, [r2, r7]
	add r1, r3, r1
	bl MIi_CpuCopy16
	add r0, r5, #0
	add r0, #0x25
	ldrb r0, [r0]
	ldr r1, _0225763C ; =ov11_0225EC8C
	ldr r3, [r4, #4]
	lsl r7, r0, #4
	ldrh r2, [r1, r7]
	mov r1, #0x19
	lsl r1, r1, #0x16
	add r1, r1, r2
	ldr r2, _02257640 ; =ov11_0225EC8E
	ldr r0, [sp, #0x20]
	ldrh r2, [r2, r7]
	add r1, r3, r1
	bl MIi_CpuCopy16
	add r0, r5, #0
	add r0, #0x25
	ldrb r0, [r0]
	ldr r3, _02257644 ; =ov11_0225EC90
	ldr r1, [r4, #4]
	lsl r2, r0, #4
	ldr r0, _02257638 ; =ov11_0225EC8A
	ldrh r0, [r0, r2]
	add r0, r6, r0
	ldrh r6, [r3, r2]
	mov r3, #0x19
	lsl r3, r3, #0x16
	add r3, r3, r6
	add r1, r1, r3
	ldr r3, _02257648 ; =ov11_0225EC92
	ldrh r2, [r3, r2]
	bl MIi_CpuCopy16
	add r5, #0x25
	ldrb r0, [r5]
	ldr r4, [r4, #4]
	lsl r2, r0, #4
	ldr r0, _02257640 ; =ov11_0225EC8E
	ldrh r1, [r0, r2]
	ldr r0, [sp, #0x20]
	add r0, r0, r1
	ldr r1, _0225764C ; =ov11_0225EC94
	ldrh r3, [r1, r2]
	mov r1, #0x19
	lsl r1, r1, #0x16
	add r1, r1, r3
	ldr r3, _02257650 ; =ov11_0225EC96
	add r1, r4, r1
	ldrh r2, [r3, r2]
	bl MIi_CpuCopy16
	add r0, sp, #0x24
	bl RemoveWindow
	ldr r0, [sp, #0x18]
	bl String_Delete
	ldr r0, [sp, #0x1c]
	bl String_Delete
	add sp, #0x34
	pop {r4, r5, r6, r7, pc}
	.align 2, 0
_02257630: .word 0x000E020F
_02257634: .word ov11_0225EC88
_02257638: .word ov11_0225EC8A
_0225763C: .word ov11_0225EC8C
_02257640: .word ov11_0225EC8E
_02257644: .word ov11_0225EC90
_02257648: .word ov11_0225EC92
_0225764C: .word ov11_0225EC94
_02257650: .word ov11_0225EC96

	thumb_func_start ov11_02257654
ov11_02257654: ; 0x02257654
	push {r3, r4, r5, r6, r7, lr}
	sub sp, #8
	str r0, [sp]
	add r0, #0x49
	ldrb r0, [r0]
	cmp r0, #0
	bne _02257666
	mov r0, #0x3e
	b _02257670
_02257666:
	cmp r0, #1
	bne _0225766E
	mov r0, #0x3c
	b _02257670
_0225766E:
	mov r0, #0x40
_02257670:
	bl ov11_02257F60
	add r4, r0, #0
	mov r0, #5
	mov r1, #0x80
	bl AllocFromHeap
	add r7, r0, #0
	ldr r0, [sp]
	ldr r0, [r0, #4]
	ldr r0, [r0]
	bl sub_02020350
	str r0, [sp, #4]
	ldr r0, [sp]
	ldr r1, _0225774C ; =ov11_0225EAB8
	add r0, #0x25
	ldrb r0, [r0]
	lsl r2, r0, #3
	ldrh r3, [r1, r2]
	mov r1, #0x19
	lsl r1, r1, #0x16
	ldr r0, [sp, #4]
	add r1, r1, r3
	ldr r3, _02257750 ; =ov11_0225EABA
	ldr r0, [r0, #4]
	ldrh r2, [r3, r2]
	add r0, r0, r1
	add r1, r7, #0
	bl MIi_CpuCopy16
	ldr r0, [sp]
	ldr r1, _02257754 ; =ov11_0225EABC
	add r0, #0x25
	ldrb r0, [r0]
	lsl r2, r0, #3
	ldrh r3, [r1, r2]
	mov r1, #0x19
	ldr r0, [sp, #4]
	lsl r1, r1, #0x16
	add r1, r1, r3
	ldr r3, _02257758 ; =ov11_0225EABE
	ldr r0, [r0, #4]
	ldrh r2, [r3, r2]
	add r0, r0, r1
	add r1, r7, #0
	add r1, #0x40
	bl MIi_CpuCopy16
	mov r2, #0
	add r1, r2, #0
_022576D6:
	mov r0, #0
	add r3, r7, r1
_022576DA:
	ldrb r5, [r4, r2]
	add r6, r4, r2
	add r0, r0, #1
	strb r5, [r3, #0x10]
	ldrb r6, [r6, #0x10]
	add r5, r3, #0
	add r5, #0x40
	strb r6, [r5]
	add r2, r2, #1
	add r3, r3, #1
	cmp r0, #0x10
	blt _022576DA
	add r1, #0x20
	add r2, #0x10
	cmp r1, #0x40
	blt _022576D6
	ldr r0, [sp]
	ldr r1, [sp, #4]
	add r0, #0x25
	ldrb r0, [r0]
	ldr r3, _0225774C ; =ov11_0225EAB8
	ldr r1, [r1, #4]
	lsl r2, r0, #3
	ldrh r4, [r3, r2]
	mov r3, #0x19
	lsl r3, r3, #0x16
	add r3, r3, r4
	add r1, r1, r3
	ldr r3, _02257750 ; =ov11_0225EABA
	add r0, r7, #0
	ldrh r2, [r3, r2]
	bl MIi_CpuCopy16
	ldr r0, [sp]
	ldr r3, _02257754 ; =ov11_0225EABC
	add r0, #0x25
	str r0, [sp]
	ldrb r0, [r0]
	ldr r1, [sp, #4]
	lsl r2, r0, #3
	ldrh r4, [r3, r2]
	mov r3, #0x19
	lsl r3, r3, #0x16
	add r0, r7, #0
	ldr r1, [r1, #4]
	add r3, r3, r4
	add r1, r1, r3
	ldr r3, _02257758 ; =ov11_0225EABE
	add r0, #0x40
	ldrh r2, [r3, r2]
	bl MIi_CpuCopy16
	add r0, r7, #0
	bl FreeToHeap
	add sp, #8
	pop {r3, r4, r5, r6, r7, pc}
	.align 2, 0
_0225774C: .word ov11_0225EAB8
_02257750: .word ov11_0225EABA
_02257754: .word ov11_0225EABC
_02257758: .word ov11_0225EABE

	thumb_func_start ov11_0225775C
ov11_0225775C: ; 0x0225775C
	push {r4, r5, r6, r7, lr}
	sub sp, #0xc
	str r0, [sp, #4]
	mov r0, #5
	mov r1, #0x60
	bl AllocFromHeap
	add r4, r0, #0
	mov r0, #5
	mov r1, #0xc0
	bl AllocFromHeap
	add r7, r0, #0
	add r0, r4, #0
	mov r1, #0xff
	mov r2, #0x60
	bl MI_CpuFill8
	ldr r0, [sp, #4]
	ldr r0, [r0, #0xc]
	bl ov11_022300BC
	ldr r1, [sp, #4]
	str r4, [sp]
	add r1, #0x48
	ldrb r1, [r1]
	mov r2, #3
	mov r3, #0
	bl sub_0200BAAC
	ldr r0, [sp, #4]
	ldr r0, [r0, #4]
	ldr r0, [r0]
	bl sub_02020350
	str r0, [sp, #8]
	ldr r0, [sp, #4]
	ldr r1, _0225786C ; =ov11_0225EA28
	add r0, #0x25
	ldrb r0, [r0]
	lsl r2, r0, #3
	ldrh r3, [r1, r2]
	mov r1, #0x19
	lsl r1, r1, #0x16
	ldr r0, [sp, #8]
	add r1, r1, r3
	ldr r3, _02257870 ; =ov11_0225EA2A
	ldr r0, [r0, #4]
	ldrh r2, [r3, r2]
	add r0, r0, r1
	add r1, r7, #0
	bl MIi_CpuCopy16
	ldr r0, [sp, #4]
	ldr r1, _02257874 ; =ov11_0225EA2C
	add r0, #0x25
	ldrb r0, [r0]
	lsl r2, r0, #3
	ldrh r3, [r1, r2]
	mov r1, #0x19
	ldr r0, [sp, #8]
	lsl r1, r1, #0x16
	add r1, r1, r3
	ldr r3, _02257878 ; =ov11_0225EA2E
	ldr r0, [r0, #4]
	ldrh r2, [r3, r2]
	add r0, r0, r1
	add r1, r7, #0
	add r1, #0x60
	bl MIi_CpuCopy16
	mov r2, #0
	add r1, r2, #0
_022577EE:
	mov r0, #0
	add r3, r7, r1
_022577F2:
	ldrb r5, [r4, r2]
	add r6, r4, r2
	add r0, r0, #1
	strb r5, [r3, #0x10]
	ldrb r6, [r6, #0x10]
	add r5, r3, #0
	add r5, #0x60
	strb r6, [r5]
	add r2, r2, #1
	add r3, r3, #1
	cmp r0, #0x10
	blt _022577F2
	add r1, #0x20
	add r2, #0x10
	cmp r1, #0x60
	blt _022577EE
	ldr r0, [sp, #4]
	ldr r1, [sp, #8]
	add r0, #0x25
	ldrb r0, [r0]
	ldr r3, _0225786C ; =ov11_0225EA28
	ldr r1, [r1, #4]
	lsl r2, r0, #3
	ldrh r5, [r3, r2]
	mov r3, #0x19
	lsl r3, r3, #0x16
	add r3, r3, r5
	add r1, r1, r3
	ldr r3, _02257870 ; =ov11_0225EA2A
	add r0, r7, #0
	ldrh r2, [r3, r2]
	bl MIi_CpuCopy16
	ldr r0, [sp, #4]
	ldr r3, _02257874 ; =ov11_0225EA2C
	add r0, #0x25
	str r0, [sp, #4]
	ldrb r0, [r0]
	ldr r1, [sp, #8]
	lsl r2, r0, #3
	ldrh r5, [r3, r2]
	mov r3, #0x19
	lsl r3, r3, #0x16
	add r0, r7, #0
	ldr r1, [r1, #4]
	add r3, r3, r5
	add r1, r1, r3
	ldr r3, _02257878 ; =ov11_0225EA2E
	add r0, #0x60
	ldrh r2, [r3, r2]
	bl MIi_CpuCopy16
	add r0, r4, #0
	bl FreeToHeap
	add r0, r7, #0
	bl FreeToHeap
	add sp, #0xc
	pop {r4, r5, r6, r7, pc}
	nop
_0225786C: .word ov11_0225EA28
_02257870: .word ov11_0225EA2A
_02257874: .word ov11_0225EA2C
_02257878: .word ov11_0225EA2E

	thumb_func_start ov11_0225787C
ov11_0225787C: ; 0x0225787C
	push {r3, r4, r5, r6, r7, lr}
	add r5, r0, #0
	add r6, r1, #0
	mov r0, #5
	mov r1, #0x60
	bl AllocFromHeap
	mov r1, #0xff
	mov r2, #0x60
	add r4, r0, #0
	bl MI_CpuFill8
	ldr r0, [r5, #0xc]
	bl ov11_022300B4
	str r4, [sp]
	add r1, r6, #0
	mov r2, #3
	mov r3, #1
	bl sub_0200BAAC
	ldr r0, [r5, #4]
	ldr r0, [r0]
	bl sub_02020350
	add r6, r0, #0
	add r0, r5, #0
	add r0, #0x25
	ldrb r0, [r0]
	mov r7, #0x19
	ldr r3, _022578F8 ; =ov11_0225EA58
	lsl r2, r0, #3
	ldrh r3, [r3, r2]
	lsl r7, r7, #0x16
	ldr r1, [r6, #4]
	add r3, r7, r3
	add r1, r1, r3
	ldr r3, _022578FC ; =ov11_0225EA5A
	add r0, r4, #0
	ldrh r2, [r3, r2]
	bl MIi_CpuCopy16
	add r5, #0x25
	ldrb r0, [r5]
	ldr r3, _02257900 ; =ov11_0225EA5C
	ldr r1, [r6, #4]
	lsl r2, r0, #3
	ldrh r3, [r3, r2]
	ldr r0, _022578FC ; =ov11_0225EA5A
	add r3, r7, r3
	add r1, r1, r3
	ldrh r0, [r0, r2]
	ldr r3, _02257904 ; =ov11_0225EA5E
	ldrh r2, [r3, r2]
	add r0, r4, r0
	bl MIi_CpuCopy16
	add r0, r4, #0
	bl FreeToHeap
	pop {r3, r4, r5, r6, r7, pc}
	nop
_022578F8: .word ov11_0225EA58
_022578FC: .word ov11_0225EA5A
_02257900: .word ov11_0225EA5C
_02257904: .word ov11_0225EA5E

	thumb_func_start ov11_02257908
ov11_02257908: ; 0x02257908
	push {r3, r4, r5, lr}
	add r5, r0, #0
	mov r0, #5
	mov r1, #0x60
	bl AllocFromHeap
	mov r1, #0xff
	mov r2, #0x60
	add r4, r0, #0
	bl MI_CpuFill8
	ldr r0, [r5, #0xc]
	bl ov11_022300B4
	str r4, [sp]
	ldr r1, [r5, #0x2c]
	mov r2, #3
	mov r3, #0
	bl sub_0200BAAC
	ldr r0, [r5, #4]
	ldr r0, [r0]
	bl sub_02020350
	add r1, r0, #0
	add r5, #0x25
	ldrb r0, [r5]
	ldr r3, _02257960 ; =ov11_0225E9F8
	ldr r1, [r1, #4]
	lsl r2, r0, #2
	ldrh r5, [r3, r2]
	mov r3, #0x19
	lsl r3, r3, #0x16
	add r3, r5, r3
	add r1, r1, r3
	ldr r3, _02257964 ; =ov11_0225E9FA
	add r0, r4, #0
	ldrh r2, [r3, r2]
	bl MIi_CpuCopy16
	add r0, r4, #0
	bl FreeToHeap
	pop {r3, r4, r5, pc}
	.align 2, 0
_02257960: .word ov11_0225E9F8
_02257964: .word ov11_0225E9FA

	thumb_func_start ov11_02257968
ov11_02257968: ; 0x02257968
	push {r3, r4, r5, lr}
	add r5, r0, #0
	add r0, #0x4b
	ldrb r0, [r0]
	cmp r0, #1
	bne _0225797C
	mov r0, #0x3b
	bl ov11_02257F60
	b _02257982
_0225797C:
	mov r0, #0x38
	bl ov11_02257F60
_02257982:
	add r4, r0, #0
	ldr r0, [r5, #4]
	ldr r0, [r0]
	bl sub_02020350
	add r5, #0x25
	add r1, r0, #0
	ldrb r0, [r5]
	lsl r2, r0, #2
	add r0, r4, #0
	ldr r4, [r1, #4]
	ldr r1, _022579B0 ; =ov11_0225E9C8
	ldrh r3, [r1, r2]
	mov r1, #0x19
	lsl r1, r1, #0x16
	add r1, r3, r1
	ldr r3, _022579B4 ; =ov11_0225E9CA
	add r1, r4, r1
	ldrh r2, [r3, r2]
	bl MIi_CpuCopy16
	pop {r3, r4, r5, pc}
	nop
_022579B0: .word ov11_0225E9C8
_022579B4: .word ov11_0225E9CA

	thumb_func_start ov11_022579B8
ov11_022579B8: ; 0x022579B8
	push {r3, r4, r5, lr}
	add r5, r0, #0
	add r0, r1, #0
	bl ov11_02257F60
	add r4, r0, #0
	ldr r0, [r5, #4]
	ldr r0, [r0]
	bl sub_02020350
	add r5, #0x25
	add r1, r0, #0
	ldrb r0, [r5]
	lsl r2, r0, #2
	add r0, r4, #0
	ldr r4, [r1, #4]
	ldr r1, _022579F0 ; =ov11_0225E998
	ldrh r3, [r1, r2]
	mov r1, #0x19
	lsl r1, r1, #0x16
	add r1, r3, r1
	ldr r3, _022579F4 ; =ov11_0225E99A
	add r1, r4, r1
	ldrh r2, [r3, r2]
	bl MIi_CpuCopy16
	pop {r3, r4, r5, pc}
	nop
_022579F0: .word ov11_0225E998
_022579F4: .word ov11_0225E99A

	thumb_func_start ov11_022579F8
ov11_022579F8: ; 0x022579F8
	push {r3, r4, r5, r6, r7, lr}
	sub sp, #0x28
	add r4, r0, #0
	ldr r0, [r4, #0xc]
	add r5, r1, #0
	bl ov11_0222FF68
	add r6, r0, #0
	ldr r0, [r4, #0xc]
	bl ov11_022300C4
	mov r1, #1
	lsl r1, r1, #0xa
	add r2, r5, #0
	tst r2, r1
	beq _02257A20
	sub r1, #0x4a
	bl NewString_ReadMsgData
	b _02257A26
_02257A20:
	add r1, #0xc4
	bl NewString_ReadMsgData
_02257A26:
	add r7, r0, #0
	mov r0, #0
	str r0, [sp]
	mov r0, #0xf
	str r0, [sp, #4]
	add r0, r6, #0
	add r1, sp, #0x18
	mov r2, #0xd
	mov r3, #2
	bl AddTextWindowTopLeftCorner
	mov r1, #0
	str r1, [sp]
	mov r0, #0xff
	str r0, [sp, #4]
	ldr r0, _02257AD0 ; =0x000E020F
	add r2, r7, #0
	str r0, [sp, #8]
	str r1, [sp, #0xc]
	str r1, [sp, #0x10]
	str r1, [sp, #0x14]
	add r0, sp, #0x18
	add r3, r1, #0
	bl AddTextPrinterParameterized3
	ldr r0, [r4, #4]
	ldr r5, [sp, #0x24]
	ldr r0, [r0]
	bl sub_02020350
	add r4, r0, #0
	mov r2, #0x1a
	mov r6, #0x19
	lsl r2, r2, #4
	lsl r6, r6, #0x16
	add r2, #0xa0
	ldr r1, [r4, #4]
	add r2, r6, r2
	add r1, r1, r2
	add r0, r5, #0
	mov r2, #0xc0
	bl MIi_CpuCopy16
	mov r2, #0xd
	mov r0, #0x1a
	lsl r2, r2, #6
	lsl r0, r0, #4
	ldr r1, [r4, #4]
	add r2, r6, r2
	add r1, r1, r2
	add r0, r5, r0
	mov r2, #0xc0
	bl MIi_CpuCopy16
	mov r2, #0xa
	lsl r2, r2, #8
	add r0, r5, #0
	ldr r1, [r4, #4]
	add r2, r6, r2
	add r1, r1, r2
	add r0, #0xc0
	mov r2, #0xe0
	bl MIi_CpuCopy16
	mov r0, #0x1a
	mov r1, #0xb
	lsl r0, r0, #4
	lsl r1, r1, #8
	add r0, r5, r0
	ldr r2, [r4, #4]
	add r1, r6, r1
	add r1, r2, r1
	add r0, #0xc0
	mov r2, #0xe0
	bl MIi_CpuCopy16
	add r0, sp, #0x18
	bl RemoveWindow
	add r0, r7, #0
	bl String_Delete
	add sp, #0x28
	pop {r3, r4, r5, r6, r7, pc}
	nop
_02257AD0: .word 0x000E020F

	thumb_func_start ov11_02257AD4
ov11_02257AD4: ; 0x02257AD4
	push {r4, r5, r6, r7, lr}
	sub sp, #0x34
	add r4, r0, #0
	ldr r0, [r4, #0xc]
	add r5, r1, #0
	bl ov11_0222FF68
	str r0, [sp, #0x1c]
	ldr r0, [r4, #0xc]
	bl ov11_022300C4
	str r0, [sp, #0x20]
	ldr r0, [r4, #0xc]
	bl ov11_02230138
	add r7, r0, #0
	mov r0, #0x1e
	mov r1, #5
	bl String_New
	mov r1, #1
	add r6, r0, #0
	lsl r1, r1, #0xa
	add r0, r5, #0
	tst r0, r1
	beq _02257B14
	ldr r0, [sp, #0x20]
	sub r1, #0x49
	bl NewString_ReadMsgData
	str r0, [sp, #0x18]
	b _02257B1E
_02257B14:
	ldr r0, [sp, #0x20]
	add r1, #0xc5
	bl NewString_ReadMsgData
	str r0, [sp, #0x18]
_02257B1E:
	mov r0, #1
	str r0, [sp]
	add r2, r4, #0
	str r0, [sp, #4]
	add r2, #0x27
	ldrb r2, [r2]
	add r0, r7, #0
	mov r1, #0
	mov r3, #2
	bl BufferIntegerAsString
	ldr r2, [sp, #0x18]
	add r0, r7, #0
	add r1, r6, #0
	bl StringExpandPlaceholders
	mov r0, #0
	str r0, [sp]
	mov r0, #0xf
	str r0, [sp, #4]
	ldr r0, [sp, #0x1c]
	add r1, sp, #0x24
	mov r2, #0xd
	mov r3, #2
	bl AddTextWindowTopLeftCorner
	mov r1, #0
	str r1, [sp]
	mov r0, #0xff
	str r0, [sp, #4]
	ldr r0, _02257BE8 ; =0x000E020F
	add r2, r6, #0
	str r0, [sp, #8]
	str r1, [sp, #0xc]
	str r1, [sp, #0x10]
	str r1, [sp, #0x14]
	add r0, sp, #0x24
	add r3, r1, #0
	bl AddTextPrinterParameterized3
	ldr r0, [r4, #4]
	ldr r5, [sp, #0x30]
	ldr r0, [r0]
	bl sub_02020350
	add r4, r0, #0
	mov r7, #0x19
	mov r2, #0x11
	lsl r7, r7, #0x16
	lsl r2, r2, #6
	ldr r1, [r4, #4]
	add r2, r7, r2
	add r1, r1, r2
	add r0, r5, #0
	mov r2, #0xc0
	bl MIi_CpuCopy16
	mov r2, #0x15
	mov r0, #0x1a
	lsl r2, r2, #6
	lsl r0, r0, #4
	ldr r1, [r4, #4]
	add r2, r7, r2
	add r1, r1, r2
	add r0, r5, r0
	mov r2, #0xc0
	bl MIi_CpuCopy16
	mov r2, #3
	lsl r2, r2, #0xa
	add r0, r5, #0
	ldr r1, [r4, #4]
	add r2, r7, r2
	add r1, r1, r2
	add r0, #0xc0
	mov r2, #0xe0
	bl MIi_CpuCopy16
	mov r0, #0x1a
	mov r1, #0xd
	lsl r0, r0, #4
	lsl r1, r1, #8
	add r0, r5, r0
	ldr r2, [r4, #4]
	add r1, r7, r1
	add r1, r2, r1
	add r0, #0xc0
	mov r2, #0xe0
	bl MIi_CpuCopy16
	add r0, sp, #0x24
	bl RemoveWindow
	add r0, r6, #0
	bl String_Delete
	ldr r0, [sp, #0x18]
	bl String_Delete
	add sp, #0x34
	pop {r4, r5, r6, r7, pc}
	.align 2, 0
_02257BE8: .word 0x000E020F

	thumb_func_start ov11_02257BEC
ov11_02257BEC: ; 0x02257BEC
	push {r4, r5, r6, lr}
	sub sp, #8
	add r5, r0, #0
	add r4, r1, #0
	bne _02257C10
	mov r0, #6
	str r0, [sp]
	mov r0, #1
	str r0, [sp, #4]
	add r3, r5, #0
	ldr r0, [r5, #0x2c]
	ldr r1, [r5, #0x28]
	ldr r2, [r5, #0x30]
	add r3, #0x34
	bl ov11_02257DE8
	add r6, r0, #0
	b _02257C48
_02257C10:
	ldr r0, [r5, #0x38]
	ldr r1, [r5, #0x40]
	ldr r2, [r5, #0x3c]
	mov r3, #0xb
	bl ov11_02257F20
	add r1, r0, #0
	bne _02257C22
	mov r1, #1
_02257C22:
	ldr r6, [r5, #0x40]
	add r0, r6, #0
	bl _s32_div_f
	bl abs
	mov r1, #0xb
	lsl r0, r0, #0x10
	add r3, r5, #0
	str r1, [sp]
	lsr r0, r0, #0x10
	str r0, [sp, #4]
	ldr r0, [r5, #0x3c]
	ldr r1, [r5, #0x38]
	add r2, r6, #0
	add r3, #0x44
	bl ov11_02257DE8
	add r6, r0, #0
_02257C48:
	cmp r4, #0
	bne _02257C5A
	add r0, r5, #0
	add r0, #0x4f
	ldrb r0, [r0]
	lsl r0, r0, #0x1c
	lsr r0, r0, #0x1f
	cmp r0, #1
	beq _02257C64
_02257C5A:
	lsl r1, r4, #0x18
	add r0, r5, #0
	lsr r1, r1, #0x18
	bl ov11_02257C80
_02257C64:
	mov r0, #0
	mvn r0, r0
	cmp r6, r0
	bne _02257C7A
	cmp r4, #0
	bne _02257C76
	mov r0, #0
	str r0, [r5, #0x34]
	b _02257C7A
_02257C76:
	mov r0, #0
	str r0, [r5, #0x44]
_02257C7A:
	add r0, r6, #0
	add sp, #8
	pop {r4, r5, r6, pc}

	thumb_func_start ov11_02257C80
ov11_02257C80: ; 0x02257C80
	push {r4, r5, r6, r7, lr}
	sub sp, #0x1c
	add r6, r0, #0
	ldr r0, [r6, #4]
	add r4, r1, #0
	ldr r0, [r0]
	bl sub_02020350
	add r5, r0, #0
	cmp r4, #0
	beq _02257C9E
	cmp r4, #1
	beq _02257D50
	add sp, #0x1c
	pop {r4, r5, r6, r7, pc}
_02257C9E:
	add r0, sp, #0x10
	str r0, [sp]
	mov r0, #6
	str r0, [sp, #4]
	add r3, r6, #0
	ldr r0, [r6, #0x2c]
	ldr r1, [r6, #0x28]
	ldr r2, [r6, #0x30]
	add r3, #0x34
	bl ov11_02257EA4
	mov r1, #0x30
	bl sub_02079A24
	cmp r0, #1
	beq _02257CCE
	cmp r0, #2
	beq _02257CCA
	cmp r0, #3
	bne _02257CCE
	mov r0, #2
	b _02257CD0
_02257CCA:
	mov r0, #0xb
	b _02257CD0
_02257CCE:
	mov r0, #0x14
_02257CD0:
	bl ov11_02257F60
	str r0, [sp, #0xc]
	add r0, r6, #0
	add r0, #0x25
	ldrb r0, [r0]
	mov r4, #0
	lsl r1, r0, #3
	ldr r0, _02257DE0 ; =ov11_0225EA8A
	ldrh r0, [r0, r1]
	lsr r7, r0, #5
_02257CE6:
	cmp r4, r7
	add r0, sp, #0x10
	bge _02257D16
	add r2, r6, #0
	add r2, #0x25
	ldrb r2, [r2]
	ldrb r0, [r0, r4]
	lsl r3, r2, #3
	ldr r2, _02257DE4 ; =ov11_0225EA88
	lsl r1, r0, #5
	ldrh r3, [r2, r3]
	ldr r0, [sp, #0xc]
	mov r2, #0x19
	lsl r2, r2, #0x16
	add r0, r0, r1
	add r3, r2, r3
	lsl r2, r4, #5
	ldr r1, [r5, #4]
	add r2, r3, r2
	add r1, r1, r2
	mov r2, #0x20
	bl MIi_CpuCopy16
	b _02257D42
_02257D16:
	ldrb r0, [r0, r4]
	ldr r2, [r5, #4]
	lsl r1, r0, #5
	ldr r0, [sp, #0xc]
	add r0, r0, r1
	add r1, r6, #0
	add r1, #0x25
	ldrb r1, [r1]
	lsl r3, r1, #3
	ldr r1, _02257DE4 ; =ov11_0225EA88
	add r1, r1, r3
	ldrh r3, [r1, #4]
	mov r1, #0x19
	lsl r1, r1, #0x16
	add r1, r1, r3
	sub r3, r4, r7
	lsl r3, r3, #5
	add r1, r1, r3
	add r1, r2, r1
	mov r2, #0x20
	bl MIi_CpuCopy16
_02257D42:
	add r0, r4, #1
	lsl r0, r0, #0x18
	lsr r4, r0, #0x18
	cmp r4, #6
	blo _02257CE6
	add sp, #0x1c
	pop {r4, r5, r6, r7, pc}
_02257D50:
	add r0, sp, #0x10
	str r0, [sp]
	mov r0, #0xb
	str r0, [sp, #4]
	add r3, r6, #0
	ldr r0, [r6, #0x3c]
	ldr r1, [r6, #0x38]
	ldr r2, [r6, #0x40]
	add r3, #0x44
	bl ov11_02257EA4
	add r6, #0x48
	ldrb r0, [r6]
	cmp r0, #0x64
	bne _02257D80
	mov r0, #0
	add r2, r0, #0
	add r1, sp, #0x10
_02257D74:
	strb r2, [r1, r0]
	add r0, r0, #1
	lsl r0, r0, #0x18
	lsr r0, r0, #0x18
	cmp r0, #0xb
	blo _02257D74
_02257D80:
	mov r0, #0x1d
	bl ov11_02257F60
	add r6, r0, #0
	mov r1, #0x19
	mov r0, #0x1a
	lsl r1, r1, #0x16
	lsl r0, r0, #6
	add r0, r1, r0
	str r0, [sp, #8]
	mov r0, #0xe
	lsl r0, r0, #8
	mov r4, #0
	add r7, r1, r0
_02257D9C:
	cmp r4, #4
	add r0, sp, #0x10
	bhs _02257DBA
	ldrb r0, [r0, r4]
	ldr r1, [sp, #8]
	lsl r2, r4, #5
	lsl r0, r0, #5
	add r1, r1, r2
	ldr r3, [r5, #4]
	add r0, r6, r0
	add r1, r3, r1
	mov r2, #0x20
	bl MIi_CpuCopy16
	b _02257DD0
_02257DBA:
	ldrb r0, [r0, r4]
	sub r2, r4, #4
	lsl r2, r2, #5
	lsl r0, r0, #5
	ldr r1, [r5, #4]
	add r2, r7, r2
	add r1, r1, r2
	add r0, r6, r0
	mov r2, #0x20
	bl MIi_CpuCopy16
_02257DD0:
	add r0, r4, #1
	lsl r0, r0, #0x18
	lsr r4, r0, #0x18
	cmp r4, #0xb
	blo _02257D9C
	add sp, #0x1c
	pop {r4, r5, r6, r7, pc}
	nop
_02257DE0: .word ov11_0225EA8A
_02257DE4: .word ov11_0225EA88

	thumb_func_start ov11_02257DE8
ov11_02257DE8: ; 0x02257DE8
	push {r4, r5, r6, lr}
	add r6, r2, #0
	add r2, sp, #0
	add r5, r3, #0
	ldrb r2, [r2, #0x10]
	mov r3, #2
	ldr r4, [r5]
	lsl r2, r2, #0x1b
	lsl r3, r3, #0x1e
	lsr r2, r2, #0x18
	cmp r4, r3
	bne _02257E0C
	cmp r0, r2
	bge _02257E0A
	lsl r3, r1, #8
	str r3, [r5]
	b _02257E0C
_02257E0A:
	str r1, [r5]
_02257E0C:
	sub r4, r1, r6
	bpl _02257E14
	mov r4, #0
	b _02257E1A
_02257E14:
	cmp r4, r0
	ble _02257E1A
	add r4, r0, #0
_02257E1A:
	cmp r0, r2
	bge _02257E32
	ldr r3, [r5]
	asr r1, r3, #8
	cmp r4, r1
	bne _02257E3E
	lsl r1, r3, #0x18
	lsr r1, r1, #0x18
	bne _02257E3E
	mov r0, #0
	mvn r0, r0
	pop {r4, r5, r6, pc}
_02257E32:
	ldr r1, [r5]
	cmp r4, r1
	bne _02257E3E
	mov r0, #0
	mvn r0, r0
	pop {r4, r5, r6, pc}
_02257E3E:
	cmp r0, r2
	bge _02257E7E
	lsl r0, r0, #8
	add r1, r2, #0
	bl _s32_div_f
	cmp r6, #0
	ldr r1, [r5]
	bge _02257E62
	add r0, r1, r0
	str r0, [r5]
	asr r0, r0, #8
	cmp r0, r4
	blt _02257EA2
	lsl r0, r4, #8
	str r0, [r5]
	add r0, r4, #0
	pop {r4, r5, r6, pc}
_02257E62:
	sub r1, r1, r0
	str r1, [r5]
	asr r0, r1, #8
	lsl r1, r1, #0x18
	lsr r1, r1, #0x18
	cmp r1, #0
	ble _02257E72
	add r0, r0, #1
_02257E72:
	cmp r0, r4
	bgt _02257EA2
	lsl r0, r4, #8
	str r0, [r5]
	add r0, r4, #0
	pop {r4, r5, r6, pc}
_02257E7E:
	cmp r6, #0
	ldr r1, [r5]
	add r0, sp, #0
	bge _02257E94
	ldrh r0, [r0, #0x14]
	add r0, r1, r0
	str r0, [r5]
	cmp r0, r4
	ble _02257EA0
	str r4, [r5]
	b _02257EA0
_02257E94:
	ldrh r0, [r0, #0x14]
	sub r0, r1, r0
	str r0, [r5]
	cmp r0, r4
	bge _02257EA0
	str r4, [r5]
_02257EA0:
	ldr r0, [r5]
_02257EA2:
	pop {r4, r5, r6, pc}

	thumb_func_start ov11_02257EA4
ov11_02257EA4: ; 0x02257EA4
	push {r3, r4, r5, r6, r7, lr}
	add r6, r0, #0
	ldr r5, [sp, #0x18]
	sub r7, r1, r2
	bpl _02257EB2
	mov r7, #0
	b _02257EB8
_02257EB2:
	cmp r7, r6
	ble _02257EB8
	add r7, r6, #0
_02257EB8:
	add r0, sp, #8
	ldrb r4, [r0, #0x14]
	mov r1, #0
	lsl r2, r4, #3
	cmp r4, #0
	ble _02257ECE
	add r0, r1, #0
_02257EC6:
	strb r0, [r5, r1]
	add r1, r1, #1
	cmp r1, r4
	blt _02257EC6
_02257ECE:
	cmp r6, r2
	ldr r1, [r3]
	bhs _02257EE2
	add r0, r1, #0
	mul r0, r2
	add r1, r6, #0
	bl _u32_div_f
	lsr r0, r0, #8
	b _02257EEC
_02257EE2:
	add r0, r1, #0
	mul r0, r2
	add r1, r6, #0
	bl _u32_div_f
_02257EEC:
	add r2, r0, #0
	cmp r0, #0
	bne _02257EFC
	cmp r7, #0
	ble _02257EFC
	mov r2, #1
	strb r2, [r5]
	b _02257F18
_02257EFC:
	mov r3, #0
	cmp r4, #0
	ble _02257F18
	mov r1, #8
_02257F04:
	cmp r0, #8
	blo _02257F0E
	strb r1, [r5, r3]
	sub r0, #8
	b _02257F12
_02257F0E:
	strb r0, [r5, r3]
	b _02257F18
_02257F12:
	add r3, r3, #1
	cmp r3, r4
	blt _02257F04
_02257F18:
	lsl r0, r2, #0x18
	lsr r0, r0, #0x18
	pop {r3, r4, r5, r6, r7, pc}
	.align 2, 0

	thumb_func_start ov11_02257F20
ov11_02257F20: ; 0x02257F20
	push {r3, r4, r5, r6, r7, lr}
	add r7, r0, #0
	lsl r0, r3, #0x1b
	add r5, r2, #0
	lsr r6, r0, #0x18
	sub r4, r7, r1
	bpl _02257F32
	mov r4, #0
	b _02257F38
_02257F32:
	cmp r4, r5
	ble _02257F38
	add r4, r5, #0
_02257F38:
	add r0, r7, #0
	mul r0, r6
	add r1, r5, #0
	bl _s32_div_f
	add r7, r0, #0
	add r0, r4, #0
	mul r0, r6
	add r1, r5, #0
	bl _s32_div_f
	lsl r1, r7, #0x18
	lsl r0, r0, #0x18
	asr r1, r1, #0x18
	asr r0, r0, #0x18
	sub r0, r1, r0
	bl abs
	pop {r3, r4, r5, r6, r7, pc}
	.align 2, 0

	thumb_func_start ov11_02257F60
ov11_02257F60: ; 0x02257F60
	ldr r1, _02257F68 ; =ov11_0225ECE8
	lsl r0, r0, #5
	add r0, r1, r0
	bx lr
	.align 2, 0
_02257F68: .word ov11_0225ECE8

	thumb_func_start ov11_02257F6C
ov11_02257F6C: ; 0x02257F6C
	push {r3, lr}
	cmp r0, #5
	bhi _02257FB8
	add r0, r0, r0
	add r0, pc
	ldrh r0, [r0, #6]
	lsl r0, r0, #0x10
	asr r0, r0, #0x10
	add pc, r0
_02257F7E: ; jump table
	.short _02257F8A - _02257F7E - 2 ; case 0
	.short _02257FA4 - _02257F7E - 2 ; case 1
	.short _02257FA8 - _02257F7E - 2 ; case 2
	.short _02257FAC - _02257F7E - 2 ; case 3
	.short _02257FB0 - _02257F7E - 2 ; case 4
	.short _02257FB4 - _02257F7E - 2 ; case 5
_02257F8A:
	mov r0, #2
	lsl r0, r0, #8
	tst r0, r1
	beq _02257F96
	mov r0, #7
	pop {r3, pc}
_02257F96:
	mov r0, #0x20
	tst r0, r1
	beq _02257FA0
	mov r0, #6
	pop {r3, pc}
_02257FA0:
	mov r0, #0
	pop {r3, pc}
_02257FA4:
	mov r0, #1
	pop {r3, pc}
_02257FA8:
	mov r0, #2
	pop {r3, pc}
_02257FAC:
	mov r0, #3
	pop {r3, pc}
_02257FB0:
	mov r0, #4
	pop {r3, pc}
_02257FB4:
	mov r0, #5
	pop {r3, pc}
_02257FB8:
	bl GF_AssertFail
	mov r0, #0
	pop {r3, pc}

	thumb_func_start ov11_02257FC0
ov11_02257FC0: ; 0x02257FC0
	push {r3, lr}
	cmp r0, #7
	bhi _02257FFE
	add r0, r0, r0
	add r0, pc
	ldrh r0, [r0, #6]
	lsl r0, r0, #0x10
	asr r0, r0, #0x10
	add pc, r0
_02257FD2: ; jump table
	.short _02257FE2 - _02257FD2 - 2 ; case 0
	.short _02257FE6 - _02257FD2 - 2 ; case 1
	.short _02257FEA - _02257FD2 - 2 ; case 2
	.short _02257FEE - _02257FD2 - 2 ; case 3
	.short _02257FF2 - _02257FD2 - 2 ; case 4
	.short _02257FF6 - _02257FD2 - 2 ; case 5
	.short _02257FFA - _02257FD2 - 2 ; case 6
	.short _02257FFA - _02257FD2 - 2 ; case 7
_02257FE2:
	ldr r0, _02258008 ; =ov11_0225EBEC
	pop {r3, pc}
_02257FE6:
	ldr r0, _0225800C ; =ov11_0225EC20
	pop {r3, pc}
_02257FEA:
	ldr r0, _02258010 ; =ov11_0225EAE8
	pop {r3, pc}
_02257FEE:
	ldr r0, _02258014 ; =ov11_0225EB1C
	pop {r3, pc}
_02257FF2:
	ldr r0, _02258018 ; =ov11_0225EB84
	pop {r3, pc}
_02257FF6:
	ldr r0, _0225801C ; =ov11_0225EC54
	pop {r3, pc}
_02257FFA:
	ldr r0, _02258020 ; =ov11_0225EBB8
	pop {r3, pc}
_02257FFE:
	bl GF_AssertFail
	mov r0, #0
	pop {r3, pc}
	nop
_02258008: .word ov11_0225EBEC
_0225800C: .word ov11_0225EC20
_02258010: .word ov11_0225EAE8
_02258014: .word ov11_0225EB1C
_02258018: .word ov11_0225EB84
_0225801C: .word ov11_0225EC54
_02258020: .word ov11_0225EBB8

	thumb_func_start ov11_02258024
ov11_02258024: ; 0x02258024
	push {r3, lr}
	cmp r0, #7
	bhi _0225804E
	add r0, r0, r0
	add r0, pc
	ldrh r0, [r0, #6]
	lsl r0, r0, #0x10
	asr r0, r0, #0x10
	add pc, r0
_02258036: ; jump table
	.short _02258046 - _02258036 - 2 ; case 0
	.short _0225804A - _02258036 - 2 ; case 1
	.short _02258046 - _02258036 - 2 ; case 2
	.short _0225804A - _02258036 - 2 ; case 3
	.short _02258046 - _02258036 - 2 ; case 4
	.short _0225804A - _02258036 - 2 ; case 5
	.short _02258046 - _02258036 - 2 ; case 6
	.short _02258046 - _02258036 - 2 ; case 7
_02258046:
	ldr r0, _02258058 ; =ov11_0225EB50
	pop {r3, pc}
_0225804A:
	mov r0, #0
	pop {r3, pc}
_0225804E:
	bl GF_AssertFail
	mov r0, #0
	pop {r3, pc}
	nop
_02258058: .word ov11_0225EB50

	thumb_func_start ov11_0225805C
ov11_0225805C: ; 0x0225805C
	push {r4, r5, r6, lr}
	add r5, r0, #0
	add r6, r1, #0
	mov r0, #0
	strb r0, [r6]
	mov r0, #5
	mov r1, #0xc
	bl AllocFromHeap
	mov r1, #0
	mov r2, #0xc
	add r4, r0, #0
	bl MI_CpuFill8
	mov r2, #0xfa
	str r5, [r4]
	ldr r0, _0225808C ; =ov11_02258090
	add r1, r4, #0
	lsl r2, r2, #2
	str r6, [r4, #4]
	bl SysTask_CreateOnMainQueue
	pop {r4, r5, r6, pc}
	nop
_0225808C: .word ov11_02258090

	thumb_func_start ov11_02258090
ov11_02258090: ; 0x02258090
	push {r3, r4, r5, r6, r7, lr}
	sub sp, #8
	add r4, r1, #0
	add r7, r0, #0
	ldr r0, [r4]
	ldr r0, [r0, #0xc]
	bl ov11_02230080
	add r5, r0, #0
	ldr r0, [r4]
	ldr r0, [r0, #0xc]
	bl ov11_022300CC
	add r6, r0, #0
	ldrb r0, [r4, #8]
	cmp r0, #0
	beq _022580BC
	cmp r0, #1
	beq _022580DA
	cmp r0, #2
	beq _02258112
	b _0225814A
_022580BC:
	ldr r1, _02258174 ; =0x00004E27
	add r0, r5, #0
	mov r2, #1
	bl sub_0200C344
	add r5, r0, #0
	ldr r0, [r4]
	add r1, r5, #0
	ldr r0, [r0, #4]
	bl sub_0200C66C
	strb r5, [r4, #9]
	ldrb r0, [r4, #8]
	add r0, r0, #1
	strb r0, [r4, #8]
_022580DA:
	mov r0, #0xa
	ldrsb r1, [r4, r0]
	add r1, r1, #4
	strb r1, [r4, #0xa]
	ldrsb r0, [r4, r0]
	cmp r0, #0x10
	blt _022580F2
	mov r0, #0x10
	strb r0, [r4, #0xa]
	ldrb r0, [r4, #8]
	add r0, r0, #1
	strb r0, [r4, #8]
_022580F2:
	ldrb r0, [r4, #0xa]
	mov r1, #2
	mov r3, #1
	str r0, [sp]
	ldr r0, _02258178 ; =0x000073A5
	str r0, [sp, #4]
	ldrb r2, [r4, #9]
	add r0, r6, #0
	lsl r2, r2, #4
	add r2, #0xf
	lsl r2, r2, #0x10
	lsr r2, r2, #0x10
	bl BlendPaletteUnfaded
	add sp, #8
	pop {r3, r4, r5, r6, r7, pc}
_02258112:
	mov r0, #0xa
	ldrsb r1, [r4, r0]
	sub r1, r1, #4
	strb r1, [r4, #0xa]
	ldrsb r0, [r4, r0]
	cmp r0, #0
	bgt _0225812A
	mov r0, #0
	strb r0, [r4, #0xa]
	ldrb r0, [r4, #8]
	add r0, r0, #1
	strb r0, [r4, #8]
_0225812A:
	ldrb r0, [r4, #0xa]
	mov r1, #2
	mov r3, #1
	str r0, [sp]
	ldr r0, _02258178 ; =0x000073A5
	str r0, [sp, #4]
	ldrb r2, [r4, #9]
	add r0, r6, #0
	lsl r2, r2, #4
	add r2, #0xf
	lsl r2, r2, #0x10
	lsr r2, r2, #0x10
	bl BlendPaletteUnfaded
	add sp, #8
	pop {r3, r4, r5, r6, r7, pc}
_0225814A:
	ldr r1, _0225817C ; =0x00004E26
	add r0, r5, #0
	mov r2, #1
	bl sub_0200C344
	add r1, r0, #0
	ldr r0, [r4]
	ldr r0, [r0, #4]
	bl sub_0200C66C
	ldr r0, [r4, #4]
	mov r1, #1
	strb r1, [r0]
	add r0, r4, #0
	bl FreeToHeap
	add r0, r7, #0
	bl SysTask_Destroy
	add sp, #8
	pop {r3, r4, r5, r6, r7, pc}
	.align 2, 0
_02258174: .word 0x00004E27
_02258178: .word 0x000073A5
_0225817C: .word 0x00004E26

	thumb_func_start ov11_02258180
ov11_02258180: ; 0x02258180
	bx lr
	.align 2, 0

	thumb_func_start ov11_02258184
ov11_02258184: ; 0x02258184
	bx lr
	.align 2, 0

	thumb_func_start ov11_02258188
ov11_02258188: ; 0x02258188
	push {r4, lr}
	add r4, r0, #0
	ldr r0, [r4, #0x50]
	cmp r0, #0
	bne _022581A6
	add r0, r4, #0
	mov r1, #0
	add r0, #0x54
	strh r1, [r0]
	ldr r0, _022581A8 ; =ov11_022581D4
	ldr r2, _022581AC ; =0x000003F2
	add r1, r4, #0
	bl SysTask_CreateOnMainQueue
	str r0, [r4, #0x50]
_022581A6:
	pop {r4, pc}
	.align 2, 0
_022581A8: .word ov11_022581D4
_022581AC: .word 0x000003F2

	thumb_func_start ov11_022581B0
ov11_022581B0: ; 0x022581B0
	push {r4, lr}
	add r4, r0, #0
	ldr r0, [r4, #0x50]
	cmp r0, #0
	beq _022581C2
	bl SysTask_Destroy
	mov r0, #0
	str r0, [r4, #0x50]
_022581C2:
	add r0, r4, #0
	mov r1, #0
	add r0, #0x54
	strh r1, [r0]
	add r0, r4, #0
	add r2, r1, #0
	bl ov11_022572C8
	pop {r4, pc}

	thumb_func_start ov11_022581D4
ov11_022581D4: ; 0x022581D4
	push {r3, r4, r5, lr}
	add r4, r1, #0
	add r1, #0x54
	ldrh r2, [r1]
	add r1, r4, #0
	add r1, #0x54
	add r2, #0x14
	strh r2, [r1]
	add r1, r4, #0
	add r1, #0x54
	ldrh r2, [r1]
	mov r1, #0x5a
	add r0, r4, #0
	lsl r1, r1, #2
	add r0, #0x54
	cmp r2, r1
	blo _022581FC
	ldrh r2, [r0]
	sub r1, r2, r1
	strh r1, [r0]
_022581FC:
	add r0, r4, #0
	add r0, #0x54
	ldrh r0, [r0]
	bl Sin
	mov r2, #6
	asr r1, r0, #0x1f
	lsl r2, r2, #0xa
	mov r3, #0
	bl _ll_mul
	mov r2, #2
	add r3, r0, #0
	add r5, r1, #0
	mov r1, #0
	lsl r2, r2, #0xa
	add r0, r4, #0
	add r3, r3, r2
	adc r5, r1
	lsl r2, r5, #0x14
	lsr r3, r3, #0xc
	orr r3, r2
	asr r2, r3, #0xb
	lsr r2, r2, #0x14
	add r2, r3, r2
	asr r2, r2, #0xc
	bl ov11_022572C8
	pop {r3, r4, r5, pc}
	.align 2, 0

	.section .rodata

	.global ov11_0225E970
ov11_0225E970: ; 0x0225E970
	.byte 0x40, 0x00, 0x48, 0x00, 0x40, 0x00, 0x00, 0x00
	.byte 0x40, 0x02, 0xC0, 0x00, 0x40, 0x03, 0xC0, 0x00, 0x00, 0x0A, 0xE0, 0x00, 0x00, 0x0B, 0xE0, 0x00
	.byte 0x40, 0x04, 0xC0, 0x00, 0x40, 0x05, 0xC0, 0x00, 0x00, 0x0C, 0xE0, 0x00, 0x00, 0x0D, 0xE0, 0x00

	.global ov11_0225E998
ov11_0225E998: ; 0x0225E998
	.byte 0x60, 0x04

	.global ov11_0225E99A
ov11_0225E99A: ; 0x0225E99A
	.byte 0x60, 0x00, 0x40, 0x04, 0x60, 0x00, 0x60, 0x04, 0x60, 0x00, 0x40, 0x04, 0x60, 0x00
	.byte 0x60, 0x04, 0x60, 0x00, 0x40, 0x04, 0x60, 0x00

	.global ov11_0225E9B0
ov11_0225E9B0: ; 0x0225E9B0
	.byte 0x00, 0x00

	.global ov11_0225E9B2
ov11_0225E9B2: ; 0x0225E9B2
	.byte 0x00, 0x00, 0x00, 0x00, 0x00, 0x00
	.byte 0xC0, 0x04, 0x40, 0x00, 0x00, 0x00, 0x00, 0x00, 0xC0, 0x04, 0x40, 0x00, 0x00, 0x00, 0x00, 0x00

	.global ov11_0225E9C8
ov11_0225E9C8: ; 0x0225E9C8
	.byte 0x40, 0x04

	.global ov11_0225E9CA
ov11_0225E9CA: ; 0x0225E9CA
	.byte 0x20, 0x00, 0x20, 0x04, 0x20, 0x00, 0x40, 0x04, 0x20, 0x00, 0x20, 0x04, 0x20, 0x00
	.byte 0x40, 0x04, 0x20, 0x00, 0x20, 0x04, 0x20, 0x00

	.global ov11_0225E9E0
ov11_0225E9E0: ; 0x0225E9E0
	.byte 0x00, 0x00

	.global ov11_0225E9E2
ov11_0225E9E2: ; 0x0225E9E2
	.byte 0x00, 0x00, 0x00, 0x00, 0x00, 0x00
	.byte 0xC0, 0x0C, 0x20, 0x00, 0x00, 0x00, 0x00, 0x00, 0xC0, 0x0C, 0x20, 0x00, 0x00, 0x00, 0x00, 0x00

	.global ov11_0225E9F8
ov11_0225E9F8: ; 0x0225E9F8
	.byte 0x80, 0x0D

	.global ov11_0225E9FA
ov11_0225E9FA: ; 0x0225E9FA
	.byte 0x60, 0x00, 0xA0, 0x06, 0x60, 0x00, 0x80, 0x0C, 0x60, 0x00, 0xA0, 0x06, 0x60, 0x00
	.byte 0x80, 0x0C, 0x60, 0x00, 0xA0, 0x06, 0x60, 0x00

	.global ov11_0225EA10
ov11_0225EA10: ; 0x0225EA10
	.byte 0x00, 0x00

	.global ov11_0225EA12
ov11_0225EA12: ; 0x0225EA12
	.byte 0x00, 0x00, 0x00, 0x00, 0x00, 0x00
	.byte 0x60, 0x0C, 0x20, 0x00, 0x00, 0x00, 0x00, 0x00, 0x60, 0x0C, 0x20, 0x00, 0x00, 0x00, 0x00, 0x00

	.global ov11_0225EA28
ov11_0225EA28: ; 0x0225EA28
	.byte 0x80, 0x0A

	.global ov11_0225EA2A
ov11_0225EA2A: ; 0x0225EA2A
	.byte 0x60, 0x00

	.global ov11_0225EA2C
ov11_0225EA2C: ; 0x0225EA2C
	.byte 0x80, 0x0B

	.global ov11_0225EA2E
ov11_0225EA2E: ; 0x0225EA2E
	.byte 0x60, 0x00, 0x60, 0x0A, 0x60, 0x00, 0x60, 0x0B, 0x60, 0x00
	.byte 0x80, 0x0A, 0x60, 0x00, 0x80, 0x0B, 0x60, 0x00, 0x60, 0x0A, 0x60, 0x00, 0x60, 0x0B, 0x60, 0x00
	.byte 0x80, 0x0A, 0x60, 0x00, 0x80, 0x0B, 0x60, 0x00, 0x60, 0x0A, 0x60, 0x00, 0x60, 0x0B, 0x60, 0x00

	.global ov11_0225EA58
ov11_0225EA58: ; 0x0225EA58
	.byte 0x00, 0x0D

	.global ov11_0225EA5A
ov11_0225EA5A: ; 0x0225EA5A
	.byte 0x60, 0x00

	.global ov11_0225EA5C
ov11_0225EA5C: ; 0x0225EA5C
	.byte 0x00, 0x00

	.global ov11_0225EA5E
ov11_0225EA5E: ; 0x0225EA5E
	.byte 0x00, 0x00, 0x20, 0x06, 0x60, 0x00, 0x00, 0x00, 0x00, 0x00
	.byte 0x00, 0x00, 0x00, 0x00, 0x00, 0x0C, 0x60, 0x00, 0x20, 0x06, 0x60, 0x00, 0x00, 0x00, 0x00, 0x00
	.byte 0x00, 0x00, 0x00, 0x00, 0x00, 0x0C, 0x60, 0x00, 0x20, 0x06, 0x60, 0x00, 0x00, 0x00, 0x00, 0x00

	.global ov11_0225EA88
ov11_0225EA88: ; 0x0225EA88
	.byte 0xE0, 0x04

	.global ov11_0225EA8A
ov11_0225EA8A: ; 0x0225EA8A
	.byte 0x00, 0x00, 0x00, 0x0C, 0xC0, 0x00, 0xE0, 0x04, 0x20, 0x00, 0x00, 0x0C, 0xA0, 0x00
	.byte 0xE0, 0x04, 0x00, 0x00, 0x00, 0x0C, 0xC0, 0x00, 0xE0, 0x04, 0x20, 0x00, 0x00, 0x0C, 0xA0, 0x00
	.byte 0xE0, 0x04, 0x00, 0x00, 0x00, 0x0C, 0xC0, 0x00, 0xE0, 0x04, 0x20, 0x00, 0x00, 0x0C, 0xA0, 0x00

	.global ov11_0225EAB8
ov11_0225EAB8: ; 0x0225EAB8
	.byte 0x40, 0x0A

	.global ov11_0225EABA
ov11_0225EABA: ; 0x0225EABA
	.byte 0x40, 0x00

	.global ov11_0225EABC
ov11_0225EABC: ; 0x0225EABC
	.byte 0x40, 0x0B

	.global ov11_0225EABE
ov11_0225EABE: ; 0x0225EABE
	.byte 0x40, 0x00, 0x20, 0x0A, 0x40, 0x00, 0x20, 0x0B, 0x40, 0x00
	.byte 0x40, 0x0A, 0x40, 0x00, 0x40, 0x0B, 0x40, 0x00, 0x20, 0x0A, 0x40, 0x00, 0x20, 0x0B, 0x40, 0x00
	.byte 0x40, 0x0A, 0x40, 0x00, 0x40, 0x0B, 0x40, 0x00, 0x20, 0x0A, 0x40, 0x00, 0x20, 0x0B, 0x40, 0x00

	.global ov11_0225EAE8
ov11_0225EAE8: ; 0x0225EAE8
	.byte 0xC0, 0x00, 0x67, 0x00, 0x00, 0x00, 0x00, 0x00, 0x1C, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00
	.byte 0x01, 0x00, 0x00, 0x00, 0x88, 0x00, 0x00, 0x00, 0x26, 0x4E, 0x00, 0x00, 0x87, 0x00, 0x00, 0x00
	.byte 0x86, 0x00, 0x00, 0x00, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0x00, 0x00, 0x00, 0x00
	.byte 0x00, 0x00, 0x00, 0x00

	.global ov11_0225EB1C
ov11_0225EB1C: ; 0x0225EB1C
	.byte 0x40, 0x00, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, 0x19, 0x00, 0x00, 0x00
	.byte 0x00, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x82, 0x00, 0x00, 0x00, 0x26, 0x4E, 0x00, 0x00
	.byte 0x81, 0x00, 0x00, 0x00, 0x80, 0x00, 0x00, 0x00, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF
	.byte 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00

	.global ov11_0225EB50
ov11_0225EB50: ; 0x0225EB50
	.byte 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00
	.byte 0x11, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x79, 0x00, 0x00, 0x00
	.byte 0x26, 0x4E, 0x00, 0x00, 0x78, 0x00, 0x00, 0x00, 0x77, 0x00, 0x00, 0x00, 0xFF, 0xFF, 0xFF, 0xFF
	.byte 0xFF, 0xFF, 0xFF, 0xFF, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00

	.global ov11_0225EB84
ov11_0225EB84: ; 0x0225EB84
	.byte 0xC6, 0x00, 0x84, 0x00
	.byte 0x00, 0x00, 0x00, 0x00, 0x1A, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00
	.byte 0x8B, 0x00, 0x00, 0x00, 0x26, 0x4E, 0x00, 0x00, 0x8A, 0x00, 0x00, 0x00, 0x89, 0x00, 0x00, 0x00
	.byte 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00

	.global ov11_0225EBB8
ov11_0225EBB8: ; 0x0225EBB8
	.byte 0xC0, 0x00, 0x74, 0x00, 0x00, 0x00, 0x00, 0x00, 0x17, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00
	.byte 0x01, 0x00, 0x00, 0x00, 0xBD, 0x00, 0x00, 0x00, 0x28, 0x4E, 0x00, 0x00, 0xBE, 0x00, 0x00, 0x00
	.byte 0xBF, 0x00, 0x00, 0x00, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0x00, 0x00, 0x00, 0x00
	.byte 0x00, 0x00, 0x00, 0x00

	.global ov11_0225EBEC
ov11_0225EBEC: ; 0x0225EBEC
	.byte 0xC6, 0x00, 0x74, 0x00, 0x00, 0x00, 0x00, 0x00, 0x17, 0x00, 0x00, 0x00
	.byte 0x00, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x7F, 0x00, 0x00, 0x00, 0x26, 0x4E, 0x00, 0x00
	.byte 0x7E, 0x00, 0x00, 0x00, 0x7D, 0x00, 0x00, 0x00, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF
	.byte 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00

	.global ov11_0225EC20
ov11_0225EC20: ; 0x0225EC20
	.byte 0x3A, 0x00, 0x24, 0x00, 0x00, 0x00, 0x00, 0x00
	.byte 0x18, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x7C, 0x00, 0x00, 0x00
	.byte 0x26, 0x4E, 0x00, 0x00, 0x7B, 0x00, 0x00, 0x00, 0x7A, 0x00, 0x00, 0x00, 0xFF, 0xFF, 0xFF, 0xFF
	.byte 0xFF, 0xFF, 0xFF, 0xFF, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00

	.global ov11_0225EC54
ov11_0225EC54: ; 0x0225EC54
	.byte 0x3A, 0x00, 0x2D, 0x00
	.byte 0x00, 0x00, 0x00, 0x00, 0x1B, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00
	.byte 0x85, 0x00, 0x00, 0x00, 0x26, 0x4E, 0x00, 0x00, 0x84, 0x00, 0x00, 0x00, 0x83, 0x00, 0x00, 0x00
	.byte 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00

	.global ov11_0225EC88
ov11_0225EC88: ; 0x0225EC88
	.byte 0x40, 0x02

	.global ov11_0225EC8A
ov11_0225EC8A: ; 0x0225EC8A
	.byte 0xC0, 0x00

	.global ov11_0225EC8C
ov11_0225EC8C: ; 0x0225EC8C
	.byte 0x40, 0x03

	.global ov11_0225EC8E
ov11_0225EC8E: ; 0x0225EC8E
	.byte 0xC0, 0x00

	.global ov11_0225EC90
ov11_0225EC90: ; 0x0225EC90
	.byte 0x00, 0x0A

	.global ov11_0225EC92
ov11_0225EC92: ; 0x0225EC92
	.byte 0x40, 0x00

	.global ov11_0225EC94
ov11_0225EC94: ; 0x0225EC94
	.byte 0x00, 0x0B

	.global ov11_0225EC96
ov11_0225EC96: ; 0x0225EC96
	.byte 0x40, 0x00
	.byte 0x20, 0x02, 0xE0, 0x00, 0x20, 0x03, 0xE0, 0x00, 0x00, 0x0A, 0x20, 0x00, 0x00, 0x0B, 0x20, 0x00
	.byte 0x40, 0x02, 0xC0, 0x00, 0x40, 0x03, 0xC0, 0x00, 0x00, 0x0A, 0x40, 0x00, 0x00, 0x0B, 0x40, 0x00
	.byte 0x20, 0x02, 0xE0, 0x00, 0x20, 0x03, 0xE0, 0x00, 0x00, 0x0A, 0x20, 0x00, 0x00, 0x0B, 0x20, 0x00
	.byte 0x40, 0x02, 0xC0, 0x00, 0x40, 0x03, 0xC0, 0x00, 0x00, 0x0A, 0x40, 0x00, 0x00, 0x0B, 0x40, 0x00
	.byte 0x20, 0x02, 0xE0, 0x00, 0x20, 0x03, 0xE0, 0x00, 0x00, 0x0A, 0x20, 0x00, 0x00, 0x0B, 0x20, 0x00

	.global ov11_0225ECE8
ov11_0225ECE8: ; 0x0225ECE8
	.byte 0x1F, 0x44, 0x44, 0x44, 0x4F, 0x44, 0xAA, 0xA4, 0x4F, 0x32, 0x99, 0x93, 0x4F, 0x33, 0x99, 0x99
	.byte 0x4F, 0x44, 0xAA, 0xA4, 0x1F, 0x44, 0x44, 0x44, 0xFF, 0x21, 0x22, 0x22, 0xFF, 0xFF, 0xFF, 0xFF
	.byte 0x44, 0x44, 0x44, 0x44, 0xA4, 0xAA, 0x4A, 0x34, 0x93, 0x49, 0x39, 0x24, 0x93, 0x99, 0x39, 0x24
	.byte 0xA4, 0x4A, 0x44, 0x34, 0x44, 0x44, 0x44, 0x44, 0x22, 0x22, 0x22, 0x22, 0xFF, 0xFF, 0xFF, 0xFF
	.byte 0x44, 0x44, 0x44, 0x44, 0x22, 0x22, 0x22, 0x22, 0x33, 0x33, 0x33, 0x33, 0x33, 0x33, 0x33, 0x33
	.byte 0x22, 0x22, 0x22, 0x22, 0x44, 0x44, 0x44, 0x44, 0x22, 0x22, 0x22, 0x22, 0xFF, 0xFF, 0xFF, 0xFF
	.byte 0x44, 0x44, 0x44, 0x44, 0x26, 0x22, 0x22, 0x22, 0x35, 0x33, 0x33, 0x33, 0x35, 0x33, 0x33, 0x33
	.byte 0x26, 0x22, 0x22, 0x22, 0x44, 0x44, 0x44, 0x44, 0x22, 0x22, 0x22, 0x22, 0xFF, 0xFF, 0xFF, 0xFF
	.byte 0x44, 0x44, 0x44, 0x44, 0x66, 0x22, 0x22, 0x22, 0x55, 0x33, 0x33, 0x33, 0x55, 0x33, 0x33, 0x33
	.byte 0x66, 0x22, 0x22, 0x22, 0x44, 0x44, 0x44, 0x44, 0x22, 0x22, 0x22, 0x22, 0xFF, 0xFF, 0xFF, 0xFF
	.byte 0x44, 0x44, 0x44, 0x44, 0x66, 0x26, 0x22, 0x22, 0x55, 0x35, 0x33, 0x33, 0x55, 0x35, 0x33, 0x33
	.byte 0x66, 0x26, 0x22, 0x22, 0x44, 0x44, 0x44, 0x44, 0x22, 0x22, 0x22, 0x22, 0xFF, 0xFF, 0xFF, 0xFF
	.byte 0x44, 0x44, 0x44, 0x44, 0x66, 0x66, 0x22, 0x22, 0x55, 0x55, 0x33, 0x33, 0x55, 0x55, 0x33, 0x33
	.byte 0x66, 0x66, 0x22, 0x22, 0x44, 0x44, 0x44, 0x44, 0x22, 0x22, 0x22, 0x22, 0xFF, 0xFF, 0xFF, 0xFF
	.byte 0x44, 0x44, 0x44, 0x44, 0x66, 0x66, 0x26, 0x22, 0x55, 0x55, 0x35, 0x33, 0x55, 0x55, 0x35, 0x33
	.byte 0x66, 0x66, 0x26, 0x22, 0x44, 0x44, 0x44, 0x44, 0x22, 0x22, 0x22, 0x22, 0xFF, 0xFF, 0xFF, 0xFF
	.byte 0x44, 0x44, 0x44, 0x44, 0x66, 0x66, 0x66, 0x22, 0x55, 0x55, 0x55, 0x33, 0x55, 0x55, 0x55, 0x33
	.byte 0x66, 0x66, 0x66, 0x22, 0x44, 0x44, 0x44, 0x44, 0x22, 0x22, 0x22, 0x22, 0xFF, 0xFF, 0xFF, 0xFF
	.byte 0x44, 0x44, 0x44, 0x44, 0x66, 0x66, 0x66, 0x26, 0x55, 0x55, 0x55, 0x35, 0x55, 0x55, 0x55, 0x35
	.byte 0x66, 0x66, 0x66, 0x26, 0x44, 0x44, 0x44, 0x44, 0x22, 0x22, 0x22, 0x22, 0xFF, 0xFF, 0xFF, 0xFF
	.byte 0x44, 0x44, 0x44, 0x44, 0x66, 0x66, 0x66, 0x66, 0x55, 0x55, 0x55, 0x55, 0x55, 0x55, 0x55, 0x55
	.byte 0x66, 0x66, 0x66, 0x66, 0x44, 0x44, 0x44, 0x44, 0x22, 0x22, 0x22, 0x22, 0xFF, 0xFF, 0xFF, 0xFF
	.byte 0x44, 0x44, 0x44, 0x44, 0x22, 0x22, 0x22, 0x22, 0x33, 0x33, 0x33, 0x33, 0x33, 0x33, 0x33, 0x33
	.byte 0x22, 0x22, 0x22, 0x22, 0x44, 0x44, 0x44, 0x44, 0x22, 0x22, 0x22, 0x22, 0xFF, 0xFF, 0xFF, 0xFF
	.byte 0x44, 0x44, 0x44, 0x44, 0x28, 0x22, 0x22, 0x22, 0x37, 0x33, 0x33, 0x33, 0x37, 0x33, 0x33, 0x33
	.byte 0x28, 0x22, 0x22, 0x22, 0x44, 0x44, 0x44, 0x44, 0x22, 0x22, 0x22, 0x22, 0xFF, 0xFF, 0xFF, 0xFF
	.byte 0x44, 0x44, 0x44, 0x44, 0x88, 0x22, 0x22, 0x22, 0x77, 0x33, 0x33, 0x33, 0x77, 0x33, 0x33, 0x33
	.byte 0x88, 0x22, 0x22, 0x22, 0x44, 0x44, 0x44, 0x44, 0x22, 0x22, 0x22, 0x22, 0xFF, 0xFF, 0xFF, 0xFF
	.byte 0x44, 0x44, 0x44, 0x44, 0x88, 0x28, 0x22, 0x22, 0x77, 0x37, 0x33, 0x33, 0x77, 0x37, 0x33, 0x33
	.byte 0x88, 0x28, 0x22, 0x22, 0x44, 0x44, 0x44, 0x44, 0x22, 0x22, 0x22, 0x22, 0xFF, 0xFF, 0xFF, 0xFF
	.byte 0x44, 0x44, 0x44, 0x44, 0x88, 0x88, 0x22, 0x22, 0x77, 0x77, 0x33, 0x33, 0x77, 0x77, 0x33, 0x33
	.byte 0x88, 0x88, 0x22, 0x22, 0x44, 0x44, 0x44, 0x44, 0x22, 0x22, 0x22, 0x22, 0xFF, 0xFF, 0xFF, 0xFF
	.byte 0x44, 0x44, 0x44, 0x44, 0x88, 0x88, 0x28, 0x22, 0x77, 0x77, 0x37, 0x33, 0x77, 0x77, 0x37, 0x33
	.byte 0x88, 0x88, 0x28, 0x22, 0x44, 0x44, 0x44, 0x44, 0x22, 0x22, 0x22, 0x22, 0xFF, 0xFF, 0xFF, 0xFF
	.byte 0x44, 0x44, 0x44, 0x44, 0x88, 0x88, 0x88, 0x22, 0x77, 0x77, 0x77, 0x33, 0x77, 0x77, 0x77, 0x33
	.byte 0x88, 0x88, 0x88, 0x22, 0x44, 0x44, 0x44, 0x44, 0x22, 0x22, 0x22, 0x22, 0xFF, 0xFF, 0xFF, 0xFF
	.byte 0x44, 0x44, 0x44, 0x44, 0x88, 0x88, 0x88, 0x28, 0x77, 0x77, 0x77, 0x37, 0x77, 0x77, 0x77, 0x37
	.byte 0x88, 0x88, 0x88, 0x28, 0x44, 0x44, 0x44, 0x44, 0x22, 0x22, 0x22, 0x22, 0xFF, 0xFF, 0xFF, 0xFF
	.byte 0x44, 0x44, 0x44, 0x44, 0x88, 0x88, 0x88, 0x88, 0x77, 0x77, 0x77, 0x77, 0x77, 0x77, 0x77, 0x77
	.byte 0x88, 0x88, 0x88, 0x88, 0x44, 0x44, 0x44, 0x44, 0x22, 0x22, 0x22, 0x22, 0xFF, 0xFF, 0xFF, 0xFF
	.byte 0x44, 0x44, 0x44, 0x44, 0x22, 0x22, 0x22, 0x22, 0x33, 0x33, 0x33, 0x33, 0x33, 0x33, 0x33, 0x33
	.byte 0x22, 0x22, 0x22, 0x22, 0x44, 0x44, 0x44, 0x44, 0x22, 0x22, 0x22, 0x22, 0xFF, 0xFF, 0xFF, 0xFF
	.byte 0x44, 0x44, 0x44, 0x44, 0x2A, 0x22, 0x22, 0x22, 0x39, 0x33, 0x33, 0x33, 0x39, 0x33, 0x33, 0x33
	.byte 0x2A, 0x22, 0x22, 0x22, 0x44, 0x44, 0x44, 0x44, 0x22, 0x22, 0x22, 0x22, 0xFF, 0xFF, 0xFF, 0xFF
	.byte 0x44, 0x44, 0x44, 0x44, 0xAA, 0x22, 0x22, 0x22, 0x99, 0x33, 0x33, 0x33, 0x99, 0x33, 0x33, 0x33
	.byte 0xAA, 0x22, 0x22, 0x22, 0x44, 0x44, 0x44, 0x44, 0x22, 0x22, 0x22, 0x22, 0xFF, 0xFF, 0xFF, 0xFF
	.byte 0x44, 0x44, 0x44, 0x44, 0xAA, 0x2A, 0x22, 0x22, 0x99, 0x39, 0x33, 0x33, 0x99, 0x39, 0x33, 0x33
	.byte 0xAA, 0x2A, 0x22, 0x22, 0x44, 0x44, 0x44, 0x44, 0x22, 0x22, 0x22, 0x22, 0xFF, 0xFF, 0xFF, 0xFF
	.byte 0x44, 0x44, 0x44, 0x44, 0xAA, 0xAA, 0x22, 0x22, 0x99, 0x99, 0x33, 0x33, 0x99, 0x99, 0x33, 0x33
	.byte 0xAA, 0xAA, 0x22, 0x22, 0x44, 0x44, 0x44, 0x44, 0x22, 0x22, 0x22, 0x22, 0xFF, 0xFF, 0xFF, 0xFF
	.byte 0x44, 0x44, 0x44, 0x44, 0xAA, 0xAA, 0x2A, 0x22, 0x99, 0x99, 0x39, 0x33, 0x99, 0x99, 0x39, 0x33
	.byte 0xAA, 0xAA, 0x2A, 0x22, 0x44, 0x44, 0x44, 0x44, 0x22, 0x22, 0x22, 0x22, 0xFF, 0xFF, 0xFF, 0xFF
	.byte 0x44, 0x44, 0x44, 0x44, 0xAA, 0xAA, 0xAA, 0x22, 0x99, 0x99, 0x99, 0x33, 0x99, 0x99, 0x99, 0x33
	.byte 0xAA, 0xAA, 0xAA, 0x22, 0x44, 0x44, 0x44, 0x44, 0x22, 0x22, 0x22, 0x22, 0xFF, 0xFF, 0xFF, 0xFF
	.byte 0x44, 0x44, 0x44, 0x44, 0xAA, 0xAA, 0xAA, 0x2A, 0x99, 0x99, 0x99, 0x39, 0x99, 0x99, 0x99, 0x39
	.byte 0xAA, 0xAA, 0xAA, 0x2A, 0x44, 0x44, 0x44, 0x44, 0x22, 0x22, 0x22, 0x22, 0xFF, 0xFF, 0xFF, 0xFF
	.byte 0x44, 0x44, 0x44, 0x44, 0xAA, 0xAA, 0xAA, 0xAA, 0x99, 0x99, 0x99, 0x99, 0x99, 0x99, 0x99, 0x99
	.byte 0xAA, 0xAA, 0xAA, 0xAA, 0x44, 0x44, 0x44, 0x44, 0x22, 0x22, 0x22, 0x22, 0xFF, 0xFF, 0xFF, 0xFF
	.byte 0x11, 0x11, 0x11, 0x11, 0x44, 0x44, 0x44, 0x44, 0x44, 0x44, 0x44, 0x44, 0x21, 0x11, 0x21, 0x11
	.byte 0x32, 0x22, 0x32, 0x22, 0x44, 0x44, 0x44, 0x44, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00
	.byte 0x11, 0x11, 0x11, 0x11, 0x44, 0x44, 0x44, 0x44, 0x44, 0x44, 0x44, 0x44, 0x2B, 0x11, 0x21, 0x11
	.byte 0x3C, 0x22, 0x32, 0x22, 0x44, 0x44, 0x44, 0x44, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00
	.byte 0x11, 0x11, 0x11, 0x11, 0x44, 0x44, 0x44, 0x44, 0x44, 0x44, 0x44, 0x44, 0xCB, 0x11, 0x21, 0x11
	.byte 0xCC, 0x22, 0x32, 0x22, 0x44, 0x44, 0x44, 0x44, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00
	.byte 0x11, 0x11, 0x11, 0x11, 0x44, 0x44, 0x44, 0x44, 0x44, 0x44, 0x44, 0x44, 0xCB, 0x1B, 0x21, 0x11
	.byte 0xCC, 0x2C, 0x32, 0x22, 0x44, 0x44, 0x44, 0x44, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00
	.byte 0x11, 0x11, 0x11, 0x11, 0x44, 0x44, 0x44, 0x44, 0x44, 0x44, 0x44, 0x44, 0xCB, 0xBB, 0x21, 0x11
	.byte 0xCC, 0xCC, 0x32, 0x22, 0x44, 0x44, 0x44, 0x44, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00
	.byte 0x11, 0x11, 0x11, 0x11, 0x44, 0x44, 0x44, 0x44, 0x44, 0x44, 0x44, 0x44, 0xCB, 0xBB, 0x2B, 0x11
	.byte 0xCC, 0xCC, 0x3C, 0x22, 0x44, 0x44, 0x44, 0x44, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00
	.byte 0x11, 0x11, 0x11, 0x11, 0x44, 0x44, 0x44, 0x44, 0x44, 0x44, 0x44, 0x44, 0xCB, 0xBB, 0xCB, 0x11
	.byte 0xCC, 0xCC, 0xCC, 0x22, 0x44, 0x44, 0x44, 0x44, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00
	.byte 0x11, 0x11, 0x11, 0x11, 0x44, 0x44, 0x44, 0x44, 0x44, 0x44, 0x44, 0x44, 0xCB, 0xBB, 0xCB, 0x1B
	.byte 0xCC, 0xCC, 0xCC, 0x2C, 0x44, 0x44, 0x44, 0x44, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00
	.byte 0x11, 0x11, 0x11, 0x11, 0x44, 0x44, 0x44, 0x44, 0x44, 0x44, 0x44, 0x44, 0xCB, 0xBB, 0xCB, 0xBB
	.byte 0xCC, 0xCC, 0xCC, 0xCC, 0x44, 0x44, 0x44, 0x44, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00
	.byte 0x1F, 0xF3, 0x1F, 0x33, 0x31, 0xF3, 0xF3, 0x33, 0x33, 0xF3, 0xFF, 0xF3, 0x33, 0xF3, 0x33, 0xF3
	.byte 0x33, 0xF3, 0x33, 0xF3, 0x31, 0x33, 0x33, 0xF3, 0x1F, 0x33, 0x33, 0xF3, 0xFF, 0x11, 0x11, 0x11
	.byte 0x33, 0x33, 0x33, 0x33, 0x33, 0xF3, 0xFF, 0x33, 0xF3, 0xF3, 0x33, 0x3F, 0x3F, 0xF3, 0xFF, 0x33
	.byte 0x33, 0xF3, 0xF3, 0x33, 0x3F, 0xF3, 0x33, 0x3F, 0xF3, 0x33, 0x33, 0x33, 0x11, 0x11, 0x11, 0x11
	.byte 0x33, 0x33, 0xF1, 0xFF, 0xF3, 0xFF, 0x13, 0xFF, 0x3F, 0x33, 0x33, 0xFF, 0xF3, 0x3F, 0x33, 0xFF
	.byte 0x33, 0xF3, 0x33, 0xFF, 0xFF, 0x3F, 0x13, 0xFF, 0x33, 0x33, 0xF1, 0xFF, 0x11, 0x11, 0xFF, 0xFF
	.byte 0x1F, 0x88, 0x88, 0x88, 0x81, 0xF8, 0xFF, 0x88, 0x88, 0xF8, 0x88, 0x8F, 0x88, 0xF8, 0xFF, 0x88
	.byte 0x88, 0xF8, 0x88, 0x88, 0x81, 0xF8, 0x88, 0x88, 0x1F, 0x88, 0x88, 0x88, 0xFF, 0x11, 0x11, 0x11
	.byte 0x88, 0x88, 0x88, 0x88, 0xF8, 0x8F, 0xF8, 0xFF, 0x8F, 0xF8, 0xF8, 0x88, 0x8F, 0xF8, 0xF8, 0xFF
	.byte 0xFF, 0xFF, 0xF8, 0xF8, 0x8F, 0xF8, 0xF8, 0x88, 0x88, 0x88, 0x88, 0x88, 0x11, 0x11, 0x11, 0x11
	.byte 0x88, 0xF1, 0xFF, 0xFF, 0x88, 0x18, 0xFF, 0xFF, 0x8F, 0x88, 0xFF, 0xFF, 0x88, 0x88, 0xFF, 0xFF
	.byte 0x88, 0x88, 0xFF, 0xFF, 0x8F, 0x18, 0xFF, 0xFF, 0x88, 0xF1, 0xFF, 0xFF, 0x11, 0xFF, 0xFF, 0xFF
	.byte 0x1F, 0xCC, 0xCC, 0xCC, 0xC1, 0xFC, 0xFF, 0xCF, 0xCC, 0xFC, 0xCC, 0xCC, 0xCC, 0xFC, 0xFF, 0xCC
	.byte 0xCC, 0xFC, 0xCC, 0xCC, 0xC1, 0xFC, 0xCC, 0xCC, 0x1F, 0xCC, 0xCC, 0xCC, 0xFF, 0x11, 0x11, 0x11
	.byte 0xCC, 0xCC, 0xCC, 0xCC, 0xFF, 0xCF, 0xFC, 0xFF, 0xCF, 0xFC, 0xCC, 0xFC, 0xFF, 0xCF, 0xCC, 0xCF
	.byte 0xCF, 0xCF, 0xFC, 0xCC, 0xCF, 0xFC, 0xFC, 0xFF, 0xCC, 0xCC, 0xCC, 0xCC, 0x11, 0x11, 0x11, 0x11
	.byte 0xCC, 0xF1, 0xFF, 0xFF, 0xCF, 0x1C, 0xFF, 0xFF, 0xCC, 0xCC, 0xFF, 0xFF, 0xCC, 0xCC, 0xFF, 0xFF
	.byte 0xCC, 0xCC, 0xFF, 0xFF, 0xCF, 0x1C, 0xFF, 0xFF, 0xCC, 0xF1, 0xFF, 0xFF, 0x11, 0xFF, 0xFF, 0xFF
	.byte 0x1F, 0x33, 0x33, 0x33, 0x31, 0x33, 0xFF, 0x3F, 0x33, 0xF3, 0x33, 0x33, 0x33, 0x33, 0xFF, 0x33
	.byte 0x33, 0x33, 0x33, 0x3F, 0x31, 0xF3, 0xFF, 0x33, 0x1F, 0x33, 0x33, 0x33, 0xFF, 0x11, 0x11, 0x11
	.byte 0x33, 0x33, 0x33, 0x33, 0x3F, 0x33, 0xF3, 0xFF, 0x3F, 0x33, 0xF3, 0x33, 0x3F, 0x33, 0xF3, 0xFF
	.byte 0x3F, 0x33, 0xF3, 0x33, 0xFF, 0xFF, 0xF3, 0x33, 0x33, 0x33, 0x33, 0x33, 0x11, 0x11, 0x11, 0x11
	.byte 0x33, 0xF1, 0xFF, 0xFF, 0x33, 0x13, 0xFF, 0xFF, 0x3F, 0x33, 0xFF, 0xFF, 0x33, 0x33, 0xFF, 0xFF
	.byte 0x33, 0x33, 0xFF, 0xFF, 0x33, 0x13, 0xFF, 0xFF, 0x33, 0xF1, 0xFF, 0xFF, 0x11, 0xFF, 0xFF, 0xFF
	.byte 0x1F, 0xDD, 0xDD, 0xDD, 0xD1, 0xFD, 0xFF, 0xDD, 0xDD, 0xFD, 0xDD, 0xDF, 0xDD, 0xFD, 0xFF, 0xDD
	.byte 0xDD, 0xFD, 0xDD, 0xDD, 0xD1, 0xFD, 0xDD, 0xDD, 0x1F, 0xDD, 0xDD, 0xDD, 0xFF, 0x11, 0x11, 0x11
	.byte 0xDD, 0xDD, 0xDD, 0xDD, 0xFD, 0xFF, 0xFD, 0xDD, 0xDF, 0xDD, 0xFD, 0xDF, 0xFD, 0xDF, 0xFD, 0xF1
	.byte 0xDD, 0xFD, 0xFD, 0xFD, 0xFF, 0xDF, 0xFD, 0xDD, 0xDD, 0xDD, 0xDD, 0xDD, 0x11, 0x11, 0x11, 0x11
	.byte 0xDD, 0xF1, 0xFF, 0xFF, 0xDF, 0x1D, 0xFF, 0xFF, 0xDF, 0xDD, 0xFF, 0xFF, 0xDF, 0xDD, 0xFF, 0xFF
	.byte 0xDF, 0xDD, 0xFF, 0xFF, 0xDF, 0x1D, 0xFF, 0xFF, 0xDD, 0xF1, 0xFF, 0xFF, 0x11, 0xFF, 0xFF, 0xFF
	.byte 0x1F, 0xAA, 0xAA, 0xAA, 0xA1, 0xFA, 0xFF, 0xAA, 0xAA, 0xFA, 0xAA, 0xAF, 0xAA, 0xFA, 0xFF, 0xAA
	.byte 0xAA, 0xFA, 0xAA, 0xAF, 0xA1, 0xFA, 0xFF, 0xAA, 0x1F, 0xAA, 0xAA, 0xAA, 0xFF, 0x11, 0x11, 0x11
	.byte 0xAA, 0xAA, 0xAA, 0xAA, 0xFF, 0xAF, 0xFA, 0xAA, 0xAF, 0xFA, 0xFA, 0xAF, 0xFF, 0xAF, 0xFA, 0xF1
	.byte 0xAF, 0xAF, 0xFA, 0xFA, 0xAF, 0xFA, 0xFA, 0xAA, 0xAA, 0xAA, 0xAA, 0xAA, 0x11, 0x11, 0x11, 0x11
	.byte 0xAA, 0xF1, 0xFF, 0xFF, 0xAF, 0x1A, 0xFF, 0xFF, 0xAF, 0xAA, 0xFF, 0xFF, 0xAF, 0xAA, 0xFF, 0xFF
	.byte 0xAF, 0xAA, 0xFF, 0xFF, 0xAF, 0x1A, 0xFF, 0xFF, 0xAA, 0xF1, 0xFF, 0xFF, 0x11, 0xFF, 0xFF, 0xFF
	.byte 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF
	.byte 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF
	.byte 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF
	.byte 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF
	.byte 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF
	.byte 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF
	.byte 0xFF, 0x33, 0xF4, 0xFF, 0x3F, 0x9F, 0x4A, 0xFF, 0x93, 0x99, 0xAA, 0xF4, 0x33, 0x33, 0x44, 0xF4
	.byte 0xF3, 0x2F, 0x22, 0xF4, 0x4F, 0x22, 0x42, 0xFF, 0xFF, 0x44, 0xF4, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF
	.byte 0xAF, 0xAA, 0xF1, 0xFF, 0x1A, 0x11, 0x1A, 0xEF, 0x1A, 0xFF, 0x1A, 0xEF, 0xAF, 0xAA, 0xF1, 0xEF
	.byte 0xFF, 0x1A, 0xFF, 0xEF, 0xAA, 0xAA, 0x1A, 0xEF, 0x11, 0x1A, 0x11, 0xEF, 0xFF, 0x1A, 0xFF, 0x2F
	.byte 0xFF, 0xFF, 0xFF, 0xFF, 0x2E, 0xFF, 0xFF, 0xFF, 0x2E, 0xFF, 0xFF, 0xFF, 0x2E, 0xEF, 0x2E, 0x2E
	.byte 0x2E, 0xEF, 0x2E, 0x2E, 0x2E, 0xEF, 0x2E, 0x2E, 0xEE, 0x2E, 0xEE, 0x22, 0x22, 0x22, 0x22, 0xF2
	.byte 0xFF, 0x1C, 0xFF, 0xFF, 0xCF, 0xCC, 0xF1, 0xEF, 0x1C, 0x1C, 0x1C, 0xEF, 0xF1, 0x1C, 0xF1, 0xEF
	.byte 0xCF, 0xCC, 0xF1, 0xEF, 0x1C, 0x11, 0x1C, 0xEF, 0x1C, 0xFF, 0x1C, 0xEF, 0xCF, 0xCC, 0xF1, 0x2F
	.byte 0xFF, 0xFF, 0xFF, 0xFF, 0x2E, 0xFF, 0xFF, 0xFF, 0x2E, 0xFF, 0xFF, 0xFF, 0x2E, 0xEF, 0x2E, 0x2E
	.byte 0x2E, 0xEF, 0x2E, 0x2E, 0x2E, 0xEF, 0x2E, 0x2E, 0xEE, 0x2E, 0xEE, 0x22, 0x22, 0x22, 0x22, 0xF2
	.byte 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xEF, 0xFF, 0xFF, 0xFF, 0xEF, 0xFF, 0xFF, 0xFF, 0xEF
	.byte 0xFF, 0xFF, 0xFF, 0xEF, 0xFF, 0xFF, 0xFF, 0xEF, 0xFF, 0xFF, 0xFF, 0xEF, 0xFF, 0xFF, 0xFF, 0x2F
	.byte 0xFF, 0xFF, 0xFF, 0xFF, 0x2E, 0xFF, 0xFF, 0xFF, 0x2E, 0xFF, 0xFF, 0xFF, 0x2E, 0xEF, 0x2E, 0x2E
	.byte 0x2E, 0xEF, 0x2E, 0x2E, 0x2E, 0xEF, 0x2E, 0x2E, 0xEE, 0x2E, 0xEE, 0x22, 0x22, 0x22, 0x22, 0xF2
	.byte 0x1F, 0x44, 0x44, 0x44, 0x4F, 0x44, 0xAA, 0xA4, 0x4F, 0x32, 0x99, 0x93, 0x4F, 0x33, 0x99, 0x99
	.byte 0x4F, 0x44, 0xAA, 0xA4, 0x1F, 0x44, 0x44, 0x44, 0xFF, 0x21, 0x22, 0x22, 0xFF, 0xFF, 0xFF, 0xFF
	.byte 0x44, 0x44, 0x44, 0x44, 0xA4, 0xAA, 0x4A, 0x34, 0x93, 0x49, 0x39, 0x24, 0x93, 0x99, 0x39, 0x24
	.byte 0xA4, 0x4A, 0x44, 0x34, 0x44, 0x44, 0x44, 0x44, 0x22, 0x22, 0x22, 0x22, 0xFF, 0xFF, 0xFF, 0xFF
	.byte 0x44, 0x14, 0xFF, 0xFF, 0x43, 0x44, 0xFF, 0xFF, 0x42, 0x42, 0xF2, 0xFF, 0x42, 0x43, 0xF2, 0xFF
	.byte 0x43, 0x44, 0xF2, 0xFF, 0x44, 0x24, 0xF2, 0xFF, 0x22, 0x22, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF
	.byte 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0x24, 0xFF, 0xFF, 0x4F, 0xF2, 0xFF, 0xFF, 0x24, 0xFF
	.byte 0xFF, 0x4F, 0xF2, 0xFF, 0xFF, 0x24, 0xFF, 0xFF, 0x4F, 0xF2, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF
